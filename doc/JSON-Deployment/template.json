{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "deployFortiWeb": {
            "defaultValue": "yes",
            "allowedValues": [
                "yes",
                "no"
            ],
            "type": "String",
            "metadata": {
                "description": "Do you want to deploy a FortiWeb as a part of this Template (Y/N)"
            }
        },
        "deployDVWA": {
            "defaultValue": "yes",
            "allowedValues": [
                "yes",
                "no"
            ],
            "type": "String",
            "metadata": {
                "description": "Do you want to deploy a DVWA Instance as a part of this Template (Y/N)"
            }
        },
        "adminUsername": {
            "type": "String",
            "metadata": {
                "description": "Username for the FortiGate VM"
            }
        },
        "adminPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "Password for the FortiGate VM"
            }
        },
        "deploymentPrefix": {
            "type": "String",
            "metadata": {
                "description": "Naming prefix for all deployed resources."
            }
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String"
        },
        "fortinetTags": {
            "defaultValue": {
                "publisher": "Fortinet",
                "template": "Canadian Fortinet Architecture Blueprint",
                "provider": "6EB3B02F-50E5-4A3E-8CB8-2E12925831AP"
            },
            "type": "Object"
        },
        "vnetNewOrExisting": {
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "type": "String",
            "metadata": {
                "description": "Identify whether to use a new or existing vnet"
            }
        },
        "vnetName": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Name of the Azure virtual network, required if utilizing and existing VNET. If no name is provided the default name will be the Resource Group Name as the Prefix and '-VNET' as the suffix"
            }
        },
        "vnetResourceGroup": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Resource Group containing the existing virtual network, leave blank if a new VNET is being utilized"
            }
        },
        "vnetAddressPrefix": {
            "defaultValue": "10.0.0.0/16",
            "type": "String",
            "metadata": {
                "description": "Virtual Network Address prefix"
            }
        },
        "subnet1Name": {
            "defaultValue": "FGExternal",
            "type": "String",
            "metadata": {
                "description": "Subnet 1 Name"
            }
        },
        "subnet1Prefix": {
            "defaultValue": "10.0.1.0/24",
            "type": "String",
            "metadata": {
                "description": "Subnet 1 Prefix"
            }
        },
        "subnet1StartAddress": {
            "defaultValue": "10.0.1.5",
            "type": "String",
            "metadata": {
                "description": "Subnet 1 start address, 2 consecutive private IPs are required"
            }
        },
        "subnet2Name": {
            "defaultValue": "FGInternal",
            "type": "String",
            "metadata": {
                "description": "Subnet 2 Name"
            }
        },
        "subnet2Prefix": {
            "defaultValue": "10.0.2.0/24",
            "type": "String",
            "metadata": {
                "description": "Subnet 2 Prefix"
            }
        },
        "subnet2StartAddress": {
            "defaultValue": "10.0.2.4",
            "type": "String",
            "metadata": {
                "description": "Subnet 2 start address, 3 consecutive private IPs are required"
            }
        },
        "subnet3Name": {
            "defaultValue": "FGHA",
            "type": "String",
            "metadata": {
                "description": "Subnet 3 Name"
            }
        },
        "subnet3Prefix": {
            "defaultValue": "10.0.3.0/24",
            "type": "String",
            "metadata": {
                "description": "Subnet 3 Prefix"
            }
        },
        "subnet3StartAddress": {
            "defaultValue": "10.0.3.5",
            "type": "String",
            "metadata": {
                "description": "Subnet 3 start address, 2 consecutive private IPs are required"
            }
        },
        "subnet4Name": {
            "defaultValue": "FGMgmt",
            "type": "String",
            "metadata": {
                "description": "Subnet 4 Name"
            }
        },
        "subnet4Prefix": {
            "defaultValue": "10.0.4.0/24",
            "type": "String",
            "metadata": {
                "description": "Subnet 4 Prefix"
            }
        },
        "subnet4StartAddress": {
            "defaultValue": "10.0.4.5",
            "type": "String",
            "metadata": {
                "description": "Subnet 4 start address, 2 consecutive private IPs are required"
            }
        },
        "subnet5Name": {
            "defaultValue": "FWBExternal",
            "type": "String",
            "metadata": {
                "description": "Subnet 5 Name"
            }
        },
        "subnet5Prefix": {
            "defaultValue": "10.0.5.0/24",
            "type": "String",
            "metadata": {
                "description": "Subnet 5 Prefix"
            }
        },
        "subnet5StartAddress": {
            "defaultValue": "10.0.5.5",
            "type": "String",
            "metadata": {
                "description": "Subnet 5 start address, 3 consecutive private IPs are required"
            }
        },
        "subnet6Name": {
            "defaultValue": "FWBInternal",
            "type": "String",
            "metadata": {
                "description": "Subnet 6 Name"
            }
        },
        "subnet6Prefix": {
            "defaultValue": "10.0.6.0/24",
            "type": "String",
            "metadata": {
                "description": "Subnet 6 Prefix"
            }
        },
        "subnet6StartAddress": {
            "defaultValue": "10.0.6.4",
            "type": "String",
            "metadata": {
                "description": "Subnet 6 start address, 2 consecutive private IPs are required"
            }
        },
        "subnet7Name": {
            "defaultValue": "DMZProtectedA",
            "type": "String",
            "metadata": {
                "description": "Subnet 7 Name"
            }
        },
        "subnet7Prefix": {
            "defaultValue": "10.0.10.0/24",
            "type": "String",
            "metadata": {
                "description": "Subnet 7 Prefix"
            }
        },
        "subnet7StartAddress": {
            "defaultValue": "10.0.10.7",
            "type": "String",
            "metadata": {
                "description": "Subnet 7 start address, 1 consecutive private IPs are required"
            }
        },
        "onPremRange": {
            "defaultValue": "172.16.0.0/16",
            "type": "String",
            "metadata": {
                "description": "Define the IP address range of your on-premise x.x.x.x/x"
            }
        },
        "fortiGateImageSKU": {
            "defaultValue": "fortinet_fg-vm_payg_2022",
            "allowedValues": [
                "fortinet_fg-vm",
                "fortinet_fg-vm_payg_2022"
            ],
            "type": "String",
            "metadata": {
                "description": "Identifies whether to to use PAYG (on demand licensing) or BYOL license model (where license is purchased separately)"
            }
        },
        "fortiGateImageVersion": {
            "defaultValue": "latest",
            "allowedValues": [
                "6.2.0",
                "6.2.2",
                "6.2.4",
                "6.2.5",
                "6.4.0",
                "6.4.10",
                "6.4.11",
                "6.4.2",
                "6.4.3",
                "6.4.5",
                "6.4.6",
                "6.4.7",
                "6.4.8",
                "6.4.9",
                "7.0.0",
                "7.0.1",
                "7.0.2",
                "7.0.3",
                "7.0.4",
                "7.0.5",
                "7.0.6",
                "7.0.8",
                "7.0.9",
                "7.2.0",
                "7.2.1",
                "7.2.2",
                "7.2.3",
                "latest"
            ],
            "type": "String",
            "metadata": {
                "description": "Select the image version"
            }
        },
        "fortiGateAdditionalCustomData": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "The ARM template provides a basic configuration. Additional configuration can be added here."
            }
        },
        "instanceType": {
            "defaultValue": "Standard_F4s",
            "allowedValues": [
                "Standard_F2s",
                "Standard_F4s",
                "Standard_F8s",
                "Standard_F16s",
                "Standard_F2",
                "Standard_F4",
                "Standard_F8",
                "Standard_F16",
                "Standard_F2s_v2",
                "Standard_F4s_v2",
                "Standard_F8s_v2",
                "Standard_F16s_v2",
                "Standard_F32s_v2",
                "Standard_DS1_v2",
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_D2s_v3",
                "Standard_D4s_v3",
                "Standard_D8s_v3",
                "Standard_D16s_v3",
                "Standard_D32s_v3",
                "Standard_D2_v4",
                "Standard_D4_v4",
                "Standard_D8_v4",
                "Standard_D16_v4",
                "Standard_D32_v4",
                "Standard_D2s_v4",
                "Standard_D4s_v4",
                "Standard_D8s_v4",
                "Standard_D16s_v4",
                "Standard_D32s_v4",
                "Standard_D2a_v4",
                "Standard_D4a_v4",
                "Standard_D8a_v4",
                "Standard_D16a_v4",
                "Standard_D32a_v4",
                "Standard_D2as_v4",
                "Standard_D4as_v4",
                "Standard_D8as_v4",
                "Standard_D16as_v4",
                "Standard_D32as_v4",
                "Standard_D2_v5",
                "Standard_D4_v5",
                "Standard_D8_v5",
                "Standard_D16_v5",
                "Standard_D32_v5",
                "Standard_D2s_v5",
                "Standard_D4s_v5",
                "Standard_D8s_v5",
                "Standard_D16s_v5",
                "Standard_D32s_v5",
                "Standard_D2as_v5",
                "Standard_D4as_v5",
                "Standard_D8as_v5",
                "Standard_D16as_v5",
                "Standard_D32as_v5",
                "Standard_D2ads_v5",
                "Standard_D4ads_v5",
                "Standard_D8ads_v5",
                "Standard_D16ads_v5",
                "Standard_D32ads_v5"
            ],
            "type": "String",
            "metadata": {
                "description": "Virtual Machine size selection - must be F4 or other instance that supports 4 NICs"
            }
        },
        "availabilityOptions": {
            "defaultValue": "Availability Set",
            "allowedValues": [
                "Availability Set",
                "Availability Zones"
            ],
            "type": "String",
            "metadata": {
                "description": "Deploy FortiGate VMs in an Availability Set or Availability Zones. If Availability Zones deployment is selected but the location does not support Availability Zones an Availability Set will be deployed. If Availability Zones deployment is selected and Availability Zones are available in the location, FortiGate A will be placed in Zone 1, FortiGate B will be placed in Zone 2"
            }
        },
        "acceleratedNetworking": {
            "defaultValue": true,
            "allowedValues": [
                false,
                true
            ],
            "type": "Bool",
            "metadata": {
                "description": "Accelerated Networking enables direct connection between the VM and network card. Only available on 2 CPU F/Fs and 4 CPU D/Dsv2, D/Dsv3, E/Esv3, Fsv2, Lsv2, Ms/Mms and Ms/Mmsv2"
            }
        },
        "publicIP1NewOrExisting": {
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "type": "String",
            "metadata": {
                "description": "Public IP for the Load Balancer for inbound and outbound data of the FortiGate VMs"
            }
        },
        "publicIP1Name": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Name of Public IP address, if no name is provided the default name will be the Resource Group Name as the Prefix and '-FGT-PIP' as the suffix"
            }
        },
        "publicIP1ResourceGroup": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Public IP Resource Group, this value is required if an existing Public IP is selected"
            }
        },
        "publicIP2NewOrExisting": {
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing",
                "none"
            ],
            "type": "String",
            "metadata": {
                "description": "Public IP for management of the FortiGate A. This deployment uses a Standard SKU Azure Load Balancer and requires a Standard SKU public IP. Microsoft Azure offers a migration path from a basic to standard SKU public IP. The management IP's for both FortiGate can be set to none. If no alternative internet access is provided, the SDN Connector functionality for dynamic objects will not work."
            }
        },
        "publicIP2Name": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Name of Public IP address, if no name is provided the default name will be the Resource Group Name as the Prefix and '-FGT-A-MGMT-PIP' as the suffix"
            }
        },
        "publicIP2ResourceGroup": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Public IP Resource Group, this value is required if an existing Public IP is selected"
            }
        },
        "publicIP3NewOrExisting": {
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing",
                "none"
            ],
            "type": "String",
            "metadata": {
                "description": "Public IP for management of the FortiGate B. This deployment uses a Standard SKU Azure Load Balancer and requires a Standard SKU public IP. Microsoft Azure offers a migration path from a basic to standard SKU public IP. The management IP's for both FortiGate can be set to none. If no alternative internet access is provided, the SDN Connector functionality for both HA failover and dynamic objects will not work."
            }
        },
        "publicIP3Name": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Name of Public IP address, if no name is provided the default name will be the Resource Group Name as the Prefix and '-FGT-B-MGMT-PIP' as the suffix"
            }
        },
        "publicIP3ResourceGroup": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Public IP Resource Group, this value is required if an existing Public IP is selected"
            }
        },
        "fgtserialConsole": {
            "defaultValue": "yes",
            "allowedValues": [
                "yes",
                "no"
            ],
            "type": "String",
            "metadata": {
                "description": "Enable Serial Console on the FortiGates"
            }
        },
        "fortiManager": {
            "defaultValue": "no",
            "allowedValues": [
                "yes",
                "no"
            ],
            "type": "String",
            "metadata": {
                "description": "Connect to FortiManager"
            }
        },
        "fortiManagerIP": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "FortiManager IP or DNS name to connect to on port TCP/541"
            }
        },
        "fortiManagerSerial": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "FortiManager serial number to add the deployed FortiGate into the FortiManager"
            }
        },
        "fortiGateLicenseBYOLA": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Primary FortiGate BYOL license content"
            }
        },
        "fortiGateLicenseBYOLB": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Secondary FortiGate BYOL license content"
            }
        },
        "fortiGateLicenseFlexVMA": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Primary FortiGate BYOL Flex-VM license token"
            }
        },
        "fortiGateLicenseFlexVMB": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Secondary FortiGate BYOL Flex-VM license token"
            }
        },
        "fortiWebImageSKU": {
            "defaultValue": "fortinet_fw-vm_payg_v2",
            "allowedValues": [
                "fortinet_fw-vm",
                "fortinet_fw-vm_payg_v2"
            ],
            "type": "String",
            "metadata": {
                "description": "Identifies whether to to use PAYG (on demand licensing) or BYOL license model (where license is purchased separately)"
            }
        },
        "fortiWebImageVersion": {
            "defaultValue": "latest",
            "allowedValues": [
                "6.3.17",
                "7.0.0",
                "7.0.3",
                "7.2.0",
                "latest"
            ],
            "type": "String",
            "metadata": {
                "description": "FortiWeb versions available in the Azure Marketplace. Additional version can be downloaded via https://support.fortinet.com/"
            }
        },
        "fortiWebHaGroupId": {
            "defaultValue": 1,
            "minValue": 0,
            "maxValue": 63,
            "type": "Int",
            "metadata": {
                "description": "Type a group id that identifies of HA cluster. Mininum is 0, Maximum is 63."
            }
        },
        "fortiWebAAdditionalCustomData": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "The ARM template provides a basic configuration. Additional configuration can be added here."
            }
        },
        "fortiWebBAdditionalCustomData": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "The ARM template provides a basic configuration. Additional configuration can be added here."
            }
        },
        "publicIPNewOrExistingOrNone": {
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing",
                "none"
            ],
            "type": "String",
            "metadata": {
                "description": "Public IP for the Load Balancer for inbound and outbound data of the FortiWeb VMs"
            }
        },
        "publicIPName": {
            "defaultValue": "FWBAPClusterPublicIP",
            "type": "String",
            "metadata": {
                "description": "Name of Public IP address element."
            }
        },
        "publicIPResourceGroup": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Resource group to which the Public IP belongs."
            }
        },
        "publicIPType": {
            "defaultValue": "Static",
            "allowedValues": [
                "Dynamic",
                "Static"
            ],
            "type": "String",
            "metadata": {
                "description": "Type of public IP address"
            }
        },
        "fwbserialConsole": {
            "defaultValue": "yes",
            "allowedValues": [
                "yes",
                "no"
            ],
            "type": "String",
            "metadata": {
                "description": "Enable Serial Console on the FortiWeb"
            }
        },
        "dvwaserialConsole": {
            "defaultValue": "yes",
            "allowedValues": [
                "yes",
                "no"
            ],
            "type": "String",
            "metadata": {
                "description": "Enable Serial Console on the DVWA"
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "networkDeployment",
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "deploymentPrefix": {
                        "value": "[parameters('deploymentPrefix')]"
                    },
                    "fortinetTags": {
                        "value": "[parameters('fortinetTags')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "subnet1Name": {
                        "value": "[parameters('subnet1Name')]"
                    },
                    "subnet1Prefix": {
                        "value": "[parameters('subnet1Prefix')]"
                    },
                    "subnet2Name": {
                        "value": "[parameters('subnet2Name')]"
                    },
                    "subnet2Prefix": {
                        "value": "[parameters('subnet2Prefix')]"
                    },
                    "subnet2StartAddress": {
                        "value": "[parameters('subnet2StartAddress')]"
                    },
                    "subnet3Name": {
                        "value": "[parameters('subnet3Name')]"
                    },
                    "subnet3Prefix": {
                        "value": "[parameters('subnet3Prefix')]"
                    },
                    "subnet4Name": {
                        "value": "[parameters('subnet4Name')]"
                    },
                    "subnet4Prefix": {
                        "value": "[parameters('subnet4Prefix')]"
                    },
                    "subnet5Name": {
                        "value": "[parameters('subnet5Name')]"
                    },
                    "subnet5Prefix": {
                        "value": "[parameters('subnet5Prefix')]"
                    },
                    "subnet6Name": {
                        "value": "[parameters('subnet6Name')]"
                    },
                    "subnet6Prefix": {
                        "value": "[parameters('subnet6Prefix')]"
                    },
                    "subnet7Name": {
                        "value": "[parameters('subnet7Name')]"
                    },
                    "subnet7Prefix": {
                        "value": "[parameters('subnet7Prefix')]"
                    },
                    "vnetAddressPrefix": {
                        "value": "[parameters('vnetAddressPrefix')]"
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "vnetNewOrExisting": {
                        "value": "[parameters('vnetNewOrExisting')]"
                    },
                    "onPremRange": {
                        "value": "[parameters('onPremRange')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "metadata": {
                        "_generator": {
                            "name": "bicep",
                            "version": "0.15.31.15270",
                            "templateHash": "10539970518247510890"
                        }
                    },
                    "parameters": {
                        "location": {
                            "type": "string"
                        },
                        "deploymentPrefix": {
                            "type": "string"
                        },
                        "vnetNewOrExisting": {
                            "type": "string"
                        },
                        "vnetName": {
                            "type": "string"
                        },
                        "vnetAddressPrefix": {
                            "type": "string"
                        },
                        "subnet1Name": {
                            "type": "string"
                        },
                        "subnet1Prefix": {
                            "type": "string"
                        },
                        "subnet2Name": {
                            "type": "string"
                        },
                        "subnet2Prefix": {
                            "type": "string"
                        },
                        "subnet2StartAddress": {
                            "type": "string"
                        },
                        "subnet3Name": {
                            "type": "string"
                        },
                        "subnet3Prefix": {
                            "type": "string"
                        },
                        "subnet4Name": {
                            "type": "string"
                        },
                        "subnet4Prefix": {
                            "type": "string"
                        },
                        "subnet5Name": {
                            "type": "string"
                        },
                        "subnet5Prefix": {
                            "type": "string"
                        },
                        "subnet6Name": {
                            "type": "string"
                        },
                        "subnet6Prefix": {
                            "type": "string"
                        },
                        "subnet7Name": {
                            "type": "string"
                        },
                        "subnet7Prefix": {
                            "type": "string"
                        },
                        "fortinetTags": {
                            "type": "object"
                        },
                        "onPremRange": {
                            "type": "string"
                        }
                    },
                    "variables": {
                        "var_vnet_Name": "[if(equals(parameters('vnetName'), ''), format('{0}-VNET', parameters('deploymentPrefix')), parameters('vnetName'))]",
                        "routeTable7Name": "[format('{0}-RouteTable-{1}', parameters('deploymentPrefix'), parameters('subnet7Name'))]",
                        "routeTable7Id": "[resourceId('Microsoft.Network/routeTables', variables('routeTable7Name'))]",
                        "routeTable5Name": "[format('{0}-RouteTable-{1}', parameters('deploymentPrefix'), parameters('subnet5Name'))]",
                        "routeTable5Id": "[resourceId('Microsoft.Network/routeTables', variables('routeTable5Name'))]",
                        "sn2IPArray": "[split(parameters('subnet2Prefix'), '.')]",
                        "sn2IPArray2": "[string(int(variables('sn2IPArray')[2]))]",
                        "sn2IPArray1": "[string(int(variables('sn2IPArray')[1]))]",
                        "sn2IPArray0": "[string(int(variables('sn2IPArray')[0]))]",
                        "sn2IPStartAddress": "[split(parameters('subnet2StartAddress'), '.')]",
                        "sn2IPlb": "[format('{0}.{1}.{2}.{3}', variables('sn2IPArray0'), variables('sn2IPArray1'), variables('sn2IPArray2'), int(variables('sn2IPStartAddress')[3]))]"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Network/routeTables",
                            "apiVersion": "2020-04-01",
                            "name": "[variables('routeTable7Name')]",
                            "location": "[parameters('location')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "properties": {
                                "routes": [
                                    {
                                        "name": "toDefault",
                                        "properties": {
                                            "addressPrefix": "0.0.0.0/0",
                                            "nextHopType": "VirtualAppliance",
                                            "nextHopIpAddress": "[variables('sn2IPlb')]"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.Network/routeTables",
                            "apiVersion": "2020-04-01",
                            "name": "[variables('routeTable5Name')]",
                            "location": "[parameters('location')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "properties": {
                                "routes": [
                                    {
                                        "name": "toOnPrem",
                                        "properties": {
                                            "addressPrefix": "[parameters('onPremRange')]",
                                            "nextHopType": "VirtualAppliance",
                                            "nextHopIpAddress": "[variables('sn2IPlb')]"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "condition": "[equals(parameters('vnetNewOrExisting'), 'new')]",
                            "type": "Microsoft.Network/virtualNetworks",
                            "apiVersion": "2020-04-01",
                            "name": "[variables('var_vnet_Name')]",
                            "location": "[parameters('location')]",
                            "properties": {
                                "addressSpace": {
                                    "addressPrefixes": [
                                        "[parameters('vnetAddressPrefix')]"
                                    ]
                                },
                                "subnets": [
                                    {
                                        "name": "[parameters('subnet1Name')]",
                                        "properties": {
                                            "addressPrefix": "[parameters('subnet1Prefix')]"
                                        }
                                    },
                                    {
                                        "name": "[parameters('subnet2Name')]",
                                        "properties": {
                                            "addressPrefix": "[parameters('subnet2Prefix')]"
                                        }
                                    },
                                    {
                                        "name": "[parameters('subnet3Name')]",
                                        "properties": {
                                            "addressPrefix": "[parameters('subnet3Prefix')]",
                                            "routeTable": {
                                                "id": "[variables('routeTable5Id')]"
                                            }
                                        }
                                    },
                                    {
                                        "name": "[parameters('subnet4Name')]",
                                        "properties": {
                                            "addressPrefix": "[parameters('subnet4Prefix')]"
                                        }
                                    },
                                    {
                                        "name": "[parameters('subnet5Name')]",
                                        "properties": {
                                            "addressPrefix": "[parameters('subnet5Prefix')]"
                                        }
                                    },
                                    {
                                        "name": "[parameters('subnet6Name')]",
                                        "properties": {
                                            "addressPrefix": "[parameters('subnet6Prefix')]"
                                        }
                                    },
                                    {
                                        "name": "[parameters('subnet7Name')]",
                                        "properties": {
                                            "addressPrefix": "[parameters('subnet7Prefix')]",
                                            "routeTable": {
                                                "id": "[variables('routeTable7Id')]"
                                            }
                                        }
                                    }
                                ]
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/routeTables', variables('routeTable5Name'))]",
                                "[resourceId('Microsoft.Network/routeTables', variables('routeTable7Name'))]"
                            ]
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "fortigateDeployment",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'networkDeployment')]"
            ],
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "subnet7StartAddress": {
                        "value": "[parameters('subnet7StartAddress')]"
                    },
                    "acceleratedNetworking": {
                        "value": "[parameters('acceleratedNetworking')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "availabilityOptions": {
                        "value": "[parameters('availabilityOptions')]"
                    },
                    "deploymentPrefix": {
                        "value": "[parameters('deploymentPrefix')]"
                    },
                    "fortiGateAdditionalCustomData": {
                        "value": "[parameters('fortiGateAdditionalCustomData')]"
                    },
                    "fortiGateImageSKU": {
                        "value": "[parameters('fortiGateImageSKU')]"
                    },
                    "fortiGateImageVersion": {
                        "value": "[parameters('fortiGateImageVersion')]"
                    },
                    "fortiGateLicenseBYOLA": {
                        "value": "[parameters('fortiGateLicenseBYOLA')]"
                    },
                    "fortiGateLicenseBYOLB": {
                        "value": "[parameters('fortiGateLicenseBYOLB')]"
                    },
                    "fortiGateLicenseFlexVMA": {
                        "value": "[parameters('fortiGateLicenseFlexVMA')]"
                    },
                    "fortiGateLicenseFlexVMB": {
                        "value": "[parameters('fortiGateLicenseFlexVMB')]"
                    },
                    "fortiManager": {
                        "value": "[parameters('fortiManager')]"
                    },
                    "fortiManagerIP": {
                        "value": "[parameters('fortiManagerIP')]"
                    },
                    "fortiManagerSerial": {
                        "value": "[parameters('fortiManagerSerial')]"
                    },
                    "fortinetTags": {
                        "value": "[parameters('fortinetTags')]"
                    },
                    "instanceType": {
                        "value": "[parameters('instanceType')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "publicIP1Name": {
                        "value": "[parameters('publicIP1Name')]"
                    },
                    "publicIP1NewOrExisting": {
                        "value": "[parameters('publicIP1NewOrExisting')]"
                    },
                    "publicIP1ResourceGroup": {
                        "value": "[parameters('publicIP1ResourceGroup')]"
                    },
                    "publicIP2Name": {
                        "value": "[parameters('publicIP2Name')]"
                    },
                    "publicIP2NewOrExisting": {
                        "value": "[parameters('publicIP2NewOrExisting')]"
                    },
                    "publicIP2ResourceGroup": {
                        "value": "[parameters('publicIP2ResourceGroup')]"
                    },
                    "publicIP3Name": {
                        "value": "[parameters('publicIP3Name')]"
                    },
                    "publicIP3NewOrExisting": {
                        "value": "[parameters('publicIP3NewOrExisting')]"
                    },
                    "publicIP3ResourceGroup": {
                        "value": "[parameters('publicIP3ResourceGroup')]"
                    },
                    "fgtserialConsole": {
                        "value": "[parameters('fgtserialConsole')]"
                    },
                    "subnet1Name": {
                        "value": "[parameters('subnet1Name')]"
                    },
                    "subnet1Prefix": {
                        "value": "[parameters('subnet1Prefix')]"
                    },
                    "subnet1StartAddress": {
                        "value": "[parameters('subnet1StartAddress')]"
                    },
                    "subnet2Name": {
                        "value": "[parameters('subnet2Name')]"
                    },
                    "subnet2Prefix": {
                        "value": "[parameters('subnet2Prefix')]"
                    },
                    "subnet2StartAddress": {
                        "value": "[parameters('subnet2StartAddress')]"
                    },
                    "subnet3Name": {
                        "value": "[parameters('subnet3Name')]"
                    },
                    "subnet3Prefix": {
                        "value": "[parameters('subnet3Prefix')]"
                    },
                    "subnet3StartAddress": {
                        "value": "[parameters('subnet3StartAddress')]"
                    },
                    "subnet4Name": {
                        "value": "[parameters('subnet4Name')]"
                    },
                    "subnet4Prefix": {
                        "value": "[parameters('subnet4Prefix')]"
                    },
                    "subnet4StartAddress": {
                        "value": "[parameters('subnet4StartAddress')]"
                    },
                    "vnetAddressPrefix": {
                        "value": "[parameters('vnetAddressPrefix')]"
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "vnetNewOrExisting": {
                        "value": "[parameters('vnetNewOrExisting')]"
                    },
                    "vnetResourceGroup": {
                        "value": "[parameters('vnetResourceGroup')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "metadata": {
                        "_generator": {
                            "name": "bicep",
                            "version": "0.15.31.15270",
                            "templateHash": "13369245126707192754"
                        }
                    },
                    "parameters": {
                        "adminUsername": {
                            "type": "string"
                        },
                        "adminPassword": {
                            "type": "securestring"
                        },
                        "deploymentPrefix": {
                            "type": "string"
                        },
                        "fortiGateImageSKU": {
                            "type": "string"
                        },
                        "fortiGateImageVersion": {
                            "type": "string"
                        },
                        "fortiGateAdditionalCustomData": {
                            "type": "string"
                        },
                        "instanceType": {
                            "type": "string"
                        },
                        "availabilityOptions": {
                            "type": "string"
                        },
                        "acceleratedNetworking": {
                            "type": "bool"
                        },
                        "publicIP1NewOrExisting": {
                            "type": "string"
                        },
                        "publicIP1Name": {
                            "type": "string"
                        },
                        "publicIP1ResourceGroup": {
                            "type": "string"
                        },
                        "publicIP2NewOrExisting": {
                            "type": "string"
                        },
                        "publicIP2Name": {
                            "type": "string"
                        },
                        "publicIP2ResourceGroup": {
                            "type": "string"
                        },
                        "publicIP3NewOrExisting": {
                            "type": "string"
                        },
                        "publicIP3Name": {
                            "type": "string"
                        },
                        "publicIP3ResourceGroup": {
                            "type": "string"
                        },
                        "vnetNewOrExisting": {
                            "type": "string"
                        },
                        "vnetName": {
                            "type": "string"
                        },
                        "vnetResourceGroup": {
                            "type": "string"
                        },
                        "vnetAddressPrefix": {
                            "type": "string"
                        },
                        "subnet1Name": {
                            "type": "string"
                        },
                        "subnet1Prefix": {
                            "type": "string"
                        },
                        "subnet1StartAddress": {
                            "type": "string"
                        },
                        "subnet2Name": {
                            "type": "string"
                        },
                        "subnet2Prefix": {
                            "type": "string"
                        },
                        "subnet2StartAddress": {
                            "type": "string"
                        },
                        "subnet3Name": {
                            "type": "string"
                        },
                        "subnet3Prefix": {
                            "type": "string"
                        },
                        "subnet3StartAddress": {
                            "type": "string"
                        },
                        "subnet4Name": {
                            "type": "string"
                        },
                        "subnet4Prefix": {
                            "type": "string"
                        },
                        "subnet4StartAddress": {
                            "type": "string"
                        },
                        "fgtserialConsole": {
                            "type": "string"
                        },
                        "fortiManager": {
                            "type": "string"
                        },
                        "fortiManagerIP": {
                            "type": "string"
                        },
                        "fortiManagerSerial": {
                            "type": "string"
                        },
                        "fortiGateLicenseBYOLA": {
                            "type": "string"
                        },
                        "fortiGateLicenseBYOLB": {
                            "type": "string"
                        },
                        "fortiGateLicenseFlexVMA": {
                            "type": "string"
                        },
                        "fortiGateLicenseFlexVMB": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        },
                        "fortinetTags": {
                            "type": "object"
                        },
                        "subnet7StartAddress": {
                            "type": "string"
                        }
                    },
                    "variables": {
                        "imagePublisher": "fortinet",
                        "imageOffer": "fortinet_fortigate-vm_v5",
                        "var_availabilitySetName": "[format('{0}-FGT-AvailabilitySet', parameters('deploymentPrefix'))]",
                        "availabilitySetId": {
                            "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('var_availabilitySetName'))]"
                        },
                        "var_vnetName": "[if(equals(parameters('vnetName'), ''), format('{0}-VNET', parameters('deploymentPrefix')), parameters('vnetName'))]",
                        "subnet1Id": "[if(equals(parameters('vnetNewOrExisting'), 'new'), resourceId('Microsoft.Network/virtualNetworks/subnets', variables('var_vnetName'), parameters('subnet1Name')), resourceId(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', variables('var_vnetName'), parameters('subnet1Name')))]",
                        "subnet2Id": "[if(equals(parameters('vnetNewOrExisting'), 'new'), resourceId('Microsoft.Network/virtualNetworks/subnets', variables('var_vnetName'), parameters('subnet2Name')), resourceId(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', variables('var_vnetName'), parameters('subnet2Name')))]",
                        "subnet3Id": "[if(equals(parameters('vnetNewOrExisting'), 'new'), resourceId('Microsoft.Network/virtualNetworks/subnets', variables('var_vnetName'), parameters('subnet3Name')), resourceId(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', variables('var_vnetName'), parameters('subnet3Name')))]",
                        "subnet4Id": "[if(equals(parameters('vnetNewOrExisting'), 'new'), resourceId('Microsoft.Network/virtualNetworks/subnets', variables('var_vnetName'), parameters('subnet4Name')), resourceId(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', variables('var_vnetName'), parameters('subnet4Name')))]",
                        "var_fgaVmName": "[format('{0}-FGT-A', parameters('deploymentPrefix'))]",
                        "var_fgbVmName": "[format('{0}-FGT-B', parameters('deploymentPrefix'))]",
                        "fmgCustomData": "[if(equals(parameters('fortiManager'), 'yes'), format('\nconfig system central-management\nset type fortimanager\n set fmg {0}\nset serial-number {1}\nend\n config system interface\n edit port1\n append allowaccess fgfm\n end\n config system interface\n edit port2\n append allowaccess fgfm\n end\n', parameters('fortiManagerIP'), parameters('fortiManagerSerial')), '')]",
                        "fgaCustomDataFlexVM": "[if(equals(parameters('fortiGateLicenseFlexVMA'), ''), '', format('exec vm-license {0}\n', parameters('fortiGateLicenseFlexVMA')))]",
                        "fgBCustomDataFlexVM": "[if(equals(parameters('fortiGateLicenseFlexVMB'), ''), '', format('exec vm-license {0}\n', parameters('fortiGateLicenseFlexVMB')))]",
                        "customDataHeader": "Content-Type: multipart/mixed; boundary=\"12345\"\nMIME-Version: 1.0\n\n--12345\nContent-Type: text/plain; charset=\"us-ascii\"\nMIME-Version: 1.0\nContent-Transfer-Encoding: 7bit\nContent-Disposition: attachment; filename=\"config\"\n\n",
                        "customDataLicenseHeader": "--12345\nContent-Type: text/plain; charset=\"us-ascii\"\nMIME-Version: 1.0\nContent-Transfer-Encoding: 7bit\nContent-Disposition: attachment; filename=\"fgtlicense\"\n\n",
                        "customDataFooter": "\n--12345--\n",
                        "fortiGateIPv4Policy": "config firewall policy\r\n    edit 1\r\n        set name \"SSH_Inbound_Access\"\r\n        set srcintf \"port1\"\r\n        set dstintf \"port2\"\r\n        set action accept\r\n        set srcaddr \"all\"\r\n        set dstaddr \"Ubuntu-SSH-VIP\"\r\n        set schedule \"always\"\r\n        set service \"SSH\"\r\n    next\r\n    edit 2\r\n        set name \"Ubuntu_Outbound\"\r\n        set srcintf \"port2\"\r\n        set dstintf \"port1\"\r\n        set action accept\r\n        set srcaddr \"all\"\r\n        set dstaddr \"all\"\r\n        set schedule \"always\"\r\n        set service \"ALL\"\r\n        set nat enable\r\n    next\r\nend\r\n",
                        "var_fgaNic1Name": "[format('{0}-Nic1', variables('var_fgaVmName'))]",
                        "fgaNic1Id": "[resourceId('Microsoft.Network/networkInterfaces', variables('var_fgaNic1Name'))]",
                        "var_fgaNic2Name": "[format('{0}-Nic2', variables('var_fgaVmName'))]",
                        "fgaNic2Id": "[resourceId('Microsoft.Network/networkInterfaces', variables('var_fgaNic2Name'))]",
                        "var_fgbNic1Name": "[format('{0}-Nic1', variables('var_fgbVmName'))]",
                        "fgbNic1Id": "[resourceId('Microsoft.Network/networkInterfaces', variables('var_fgbNic1Name'))]",
                        "var_fgbNic2Name": "[format('{0}-Nic2', variables('var_fgbVmName'))]",
                        "fgbNic2Id": "[resourceId('Microsoft.Network/networkInterfaces', variables('var_fgbNic2Name'))]",
                        "var_fgaNic3Name": "[format('{0}-Nic3', variables('var_fgaVmName'))]",
                        "fgaNic3Id": "[resourceId('Microsoft.Network/networkInterfaces', variables('var_fgaNic3Name'))]",
                        "var_fgbNic3Name": "[format('{0}-Nic3', variables('var_fgbVmName'))]",
                        "fgbNic3Id": "[resourceId('Microsoft.Network/networkInterfaces', variables('var_fgbNic3Name'))]",
                        "var_fgaNic4Name": "[format('{0}-Nic4', variables('var_fgaVmName'))]",
                        "fgaNic4Id": "[resourceId('Microsoft.Network/networkInterfaces', variables('var_fgaNic4Name'))]",
                        "var_fgbNic4Name": "[format('{0}-Nic4', variables('var_fgbVmName'))]",
                        "fgbNic4Id": "[resourceId('Microsoft.Network/networkInterfaces', variables('var_fgbNic4Name'))]",
                        "var_serialConsoleStorageAccountName": "[format('fgtsc{0}', uniqueString(resourceGroup().id))]",
                        "serialConsoleStorageAccountType": "Standard_LRS",
                        "serialConsoleEnabled": "[if(equals(parameters('fgtserialConsole'), 'yes'), true(), false())]",
                        "var_publicIP1Name": "[if(equals(parameters('publicIP1Name'), ''), format('{0}-FGT-PIP', parameters('deploymentPrefix')), parameters('publicIP1Name'))]",
                        "publicIP1Id": "[if(equals(parameters('publicIP1NewOrExisting'), 'new'), resourceId('Microsoft.Network/publicIPAddresses', variables('var_publicIP1Name')), resourceId(parameters('publicIP1ResourceGroup'), 'Microsoft.Network/publicIPAddresses', variables('var_publicIP1Name')))]",
                        "var_publicIP2Name": "[if(equals(parameters('publicIP2Name'), ''), format('{0}-FGT-A-MGMT-PIP', parameters('deploymentPrefix')), parameters('publicIP2Name'))]",
                        "publicIP2Id": "[if(equals(parameters('publicIP2NewOrExisting'), 'new'), resourceId('Microsoft.Network/publicIPAddresses', variables('var_publicIP2Name')), resourceId(parameters('publicIP2ResourceGroup'), 'Microsoft.Network/publicIPAddresses', variables('var_publicIP2Name')))]",
                        "publicIPAddress2Id": {
                            "id": "[variables('publicIP2Id')]"
                        },
                        "var_publicIP3Name": "[if(equals(parameters('publicIP3Name'), ''), format('{0}-FGT-B-MGMT-PIP', parameters('deploymentPrefix')), parameters('publicIP3Name'))]",
                        "publicIP3Id": "[if(equals(parameters('publicIP3NewOrExisting'), 'new'), resourceId('Microsoft.Network/publicIPAddresses', variables('var_publicIP3Name')), resourceId(parameters('publicIP3ResourceGroup'), 'Microsoft.Network/publicIPAddresses', variables('var_publicIP3Name')))]",
                        "publicIPAddress3Id": {
                            "id": "[variables('publicIP3Id')]"
                        },
                        "var_nsgName": "[format('{0}-NSG-Allow-All', parameters('deploymentPrefix'))]",
                        "nsgId": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('var_nsgName'))]",
                        "sn1IPArray": "[split(parameters('subnet1Prefix'), '.')]",
                        "sn1IPArray2ndString": "[string(variables('sn1IPArray')[3])]",
                        "sn1IPArray2nd": "[split(variables('sn1IPArray2ndString'), '/')]",
                        "sn1CIDRmask": "[string(int(variables('sn1IPArray2nd')[1]))]",
                        "sn1IPArray3": "[string(add(int(variables('sn1IPArray2nd')[0]), 1))]",
                        "sn1IPArray2": "[string(int(variables('sn1IPArray')[2]))]",
                        "sn1IPArray1": "[string(int(variables('sn1IPArray')[1]))]",
                        "sn1IPArray0": "[string(int(variables('sn1IPArray')[0]))]",
                        "sn1GatewayIP": "[format('{0}.{1}.{2}.{3}', variables('sn1IPArray0'), variables('sn1IPArray1'), variables('sn1IPArray2'), variables('sn1IPArray3'))]",
                        "sn1IPStartAddress": "[split(parameters('subnet1StartAddress'), '.')]",
                        "sn1IPfga": "[format('{0}.{1}.{2}.{3}', variables('sn1IPArray0'), variables('sn1IPArray1'), variables('sn1IPArray2'), int(variables('sn1IPStartAddress')[3]))]",
                        "sn1IPfgb": "[format('{0}.{1}.{2}.{3}', variables('sn1IPArray0'), variables('sn1IPArray1'), variables('sn1IPArray2'), add(int(variables('sn1IPStartAddress')[3]), 1))]",
                        "sn2IPArray": "[split(parameters('subnet2Prefix'), '.')]",
                        "sn2IPArray2ndString": "[string(variables('sn2IPArray')[3])]",
                        "sn2IPArray2nd": "[split(variables('sn2IPArray2ndString'), '/')]",
                        "sn2CIDRmask": "[string(int(variables('sn2IPArray2nd')[1]))]",
                        "sn2IPArray3": "[string(add(int(variables('sn2IPArray2nd')[0]), 1))]",
                        "sn2IPArray2": "[string(int(variables('sn2IPArray')[2]))]",
                        "sn2IPArray1": "[string(int(variables('sn2IPArray')[1]))]",
                        "sn2IPArray0": "[string(int(variables('sn2IPArray')[0]))]",
                        "sn2GatewayIP": "[format('{0}.{1}.{2}.{3}', variables('sn2IPArray0'), variables('sn2IPArray1'), variables('sn2IPArray2'), variables('sn2IPArray3'))]",
                        "sn2IPStartAddress": "[split(parameters('subnet2StartAddress'), '.')]",
                        "sn2IPlb": "[format('{0}.{1}.{2}.{3}', variables('sn2IPArray0'), variables('sn2IPArray1'), variables('sn2IPArray2'), int(variables('sn2IPStartAddress')[3]))]",
                        "sn2IPfga": "[format('{0}.{1}.{2}.{3}', variables('sn2IPArray0'), variables('sn2IPArray1'), variables('sn2IPArray2'), add(int(variables('sn2IPStartAddress')[3]), 1))]",
                        "sn2IPfgb": "[format('{0}.{1}.{2}.{3}', variables('sn2IPArray0'), variables('sn2IPArray1'), variables('sn2IPArray2'), add(int(variables('sn2IPStartAddress')[3]), 2))]",
                        "sn3IPArray": "[split(parameters('subnet3Prefix'), '.')]",
                        "sn3IPArray2ndString": "[string(variables('sn3IPArray')[3])]",
                        "sn3IPArray2nd": "[split(variables('sn3IPArray2ndString'), '/')]",
                        "sn3CIDRmask": "[string(int(variables('sn3IPArray2nd')[1]))]",
                        "sn3IPArray2": "[string(int(variables('sn3IPArray')[2]))]",
                        "sn3IPArray1": "[string(int(variables('sn3IPArray')[1]))]",
                        "sn3IPArray0": "[string(int(variables('sn3IPArray')[0]))]",
                        "sn3IPStartAddress": "[split(parameters('subnet3StartAddress'), '.')]",
                        "sn3IPfga": "[format('{0}.{1}.{2}.{3}', variables('sn3IPArray0'), variables('sn3IPArray1'), variables('sn3IPArray2'), int(variables('sn3IPStartAddress')[3]))]",
                        "sn3IPfgb": "[format('{0}.{1}.{2}.{3}', variables('sn3IPArray0'), variables('sn3IPArray1'), variables('sn3IPArray2'), add(int(variables('sn3IPStartAddress')[3]), 1))]",
                        "sn4IPArray": "[split(parameters('subnet4Prefix'), '.')]",
                        "sn4IPArray2ndString": "[string(variables('sn4IPArray')[3])]",
                        "sn4IPArray2nd": "[split(variables('sn4IPArray2ndString'), '/')]",
                        "sn4CIDRmask": "[string(int(variables('sn4IPArray2nd')[1]))]",
                        "sn4IPArray3": "[string(add(int(variables('sn4IPArray2nd')[0]), 1))]",
                        "sn4IPArray2": "[string(int(variables('sn4IPArray')[2]))]",
                        "sn4IPArray1": "[string(int(variables('sn4IPArray')[1]))]",
                        "sn4IPArray0": "[string(int(variables('sn4IPArray')[0]))]",
                        "sn4GatewayIP": "[format('{0}.{1}.{2}.{3}', variables('sn4IPArray0'), variables('sn4IPArray1'), variables('sn4IPArray2'), variables('sn4IPArray3'))]",
                        "sn4IPStartAddress": "[split(parameters('subnet4StartAddress'), '.')]",
                        "sn4IPfga": "[format('{0}.{1}.{2}.{3}', variables('sn4IPArray0'), variables('sn4IPArray1'), variables('sn4IPArray2'), int(variables('sn4IPStartAddress')[3]))]",
                        "sn4IPfgb": "[format('{0}.{1}.{2}.{3}', variables('sn4IPArray0'), variables('sn4IPArray1'), variables('sn4IPArray2'), add(int(variables('sn4IPStartAddress')[3]), 1))]",
                        "var_internalLBName": "[format('{0}-FGT-ILB', parameters('deploymentPrefix'))]",
                        "internalLBFEName": "[format('{0}-ILB-{1}-FrontEnd', parameters('deploymentPrefix'), parameters('subnet2Name'))]",
                        "internalLBFEId": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('var_internalLBName'), variables('internalLBFEName'))]",
                        "internalLBBEName": "[format('{0}-ILB-{1}-BackEnd', parameters('deploymentPrefix'), parameters('subnet2Name'))]",
                        "internalLBBEId": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('var_internalLBName'), variables('internalLBBEName'))]",
                        "internalLBProbeName": "lbprobe",
                        "internalLBProbeId": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('var_internalLBName'), variables('internalLBProbeName'))]",
                        "externalLBName_NatRule_FGAdminPerm_fga": "[format('{0}FGAdminPerm', variables('var_fgaVmName'))]",
                        "externalLBId_NatRule_FGAdminPerm_fga": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', variables('var_externalLBName'), variables('externalLBName_NatRule_FGAdminPerm_fga'))]",
                        "externalLBName_NatRule_SSH_fga": "[format('{0}SSH', variables('var_fgaVmName'))]",
                        "externalLBId_NatRule_SSH_fga": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', variables('var_externalLBName'), variables('externalLBName_NatRule_SSH_fga'))]",
                        "externalLBName_NatRule_FGAdminPerm_fgb": "[format('{0}FGAdminPerm', variables('var_fgbVmName'))]",
                        "externalLBId_NatRule_FGAdminPerm_fgb": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', variables('var_externalLBName'), variables('externalLBName_NatRule_FGAdminPerm_fgb'))]",
                        "externalLBName_NatRule_SSH_fgb": "[format('{0}SSH', variables('var_fgbVmName'))]",
                        "externalLBId_NatRule_SSH_fgb": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', variables('var_externalLBName'), variables('externalLBName_NatRule_SSH_fgb'))]",
                        "var_externalLBName": "[format('{0}-FGT-ELB', parameters('deploymentPrefix'))]",
                        "externalLBFEName": "[format('{0}-ELB-{1}-FrontEnd', parameters('deploymentPrefix'), parameters('subnet1Name'))]",
                        "externalLBFEId": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('var_externalLBName'), variables('externalLBFEName'))]",
                        "externalLBBEName": "[format('{0}-ELB-{1}-BackEnd', parameters('deploymentPrefix'), parameters('subnet1Name'))]",
                        "externalLBBEId": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('var_externalLBName'), variables('externalLBBEName'))]",
                        "externalLBProbeName": "lbprobe",
                        "externalLBProbeId": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('var_externalLBName'), variables('externalLBProbeName'))]",
                        "useAZ": "[and(not(empty(pickZones('Microsoft.Compute', 'virtualMachines', parameters('location')))), equals(parameters('availabilityOptions'), 'Availability Zones'))]",
                        "zone1": [
                            "1"
                        ],
                        "zone2": [
                            "2"
                        ]
                    },
                    "resources": [
                        {
                            "condition": "[equals(parameters('fgtserialConsole'), 'yes')]",
                            "type": "Microsoft.Storage/storageAccounts",
                            "apiVersion": "2021-02-01",
                            "name": "[variables('var_serialConsoleStorageAccountName')]",
                            "location": "[parameters('location')]",
                            "kind": "Storage",
                            "sku": {
                                "name": "[variables('serialConsoleStorageAccountType')]"
                            }
                        },
                        {
                            "condition": "[not(variables('useAZ'))]",
                            "type": "Microsoft.Compute/availabilitySets",
                            "apiVersion": "2021-07-01",
                            "name": "[variables('var_availabilitySetName')]",
                            "location": "[parameters('location')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "properties": {
                                "platformFaultDomainCount": 2,
                                "platformUpdateDomainCount": 2
                            },
                            "sku": {
                                "name": "Aligned"
                            }
                        },
                        {
                            "type": "Microsoft.Network/loadBalancers",
                            "apiVersion": "2020-04-01",
                            "name": "[variables('var_internalLBName')]",
                            "location": "[parameters('location')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "sku": {
                                "name": "Standard"
                            },
                            "properties": {
                                "frontendIPConfigurations": [
                                    {
                                        "name": "[variables('internalLBFEName')]",
                                        "properties": {
                                            "privateIPAddress": "[variables('sn2IPlb')]",
                                            "privateIPAllocationMethod": "Static",
                                            "subnet": {
                                                "id": "[variables('subnet2Id')]"
                                            }
                                        }
                                    }
                                ],
                                "backendAddressPools": [
                                    {
                                        "name": "[variables('internalLBBEName')]"
                                    }
                                ],
                                "loadBalancingRules": [
                                    {
                                        "properties": {
                                            "frontendIPConfiguration": {
                                                "id": "[variables('internalLBFEId')]"
                                            },
                                            "backendAddressPool": {
                                                "id": "[variables('internalLBBEId')]"
                                            },
                                            "probe": {
                                                "id": "[variables('internalLBProbeId')]"
                                            },
                                            "protocol": "All",
                                            "frontendPort": 0,
                                            "backendPort": 0,
                                            "enableFloatingIP": true,
                                            "idleTimeoutInMinutes": 5
                                        },
                                        "name": "lbruleFEall"
                                    }
                                ],
                                "probes": [
                                    {
                                        "properties": {
                                            "protocol": "Tcp",
                                            "port": 8008,
                                            "intervalInSeconds": 5,
                                            "numberOfProbes": 2
                                        },
                                        "name": "lbprobe"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.Network/networkSecurityGroups",
                            "apiVersion": "2020-04-01",
                            "name": "[variables('var_nsgName')]",
                            "location": "[parameters('location')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "properties": {
                                "securityRules": [
                                    {
                                        "name": "AllowAllInbound",
                                        "properties": {
                                            "description": "Allow all in",
                                            "protocol": "*",
                                            "sourcePortRange": "*",
                                            "destinationPortRange": "*",
                                            "sourceAddressPrefix": "*",
                                            "destinationAddressPrefix": "*",
                                            "access": "Allow",
                                            "priority": 100,
                                            "direction": "Inbound"
                                        }
                                    },
                                    {
                                        "name": "AllowAllOutbound",
                                        "properties": {
                                            "description": "Allow all out",
                                            "protocol": "*",
                                            "sourcePortRange": "*",
                                            "destinationPortRange": "*",
                                            "sourceAddressPrefix": "*",
                                            "destinationAddressPrefix": "*",
                                            "access": "Allow",
                                            "priority": 105,
                                            "direction": "Outbound"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "condition": "[equals(parameters('publicIP1NewOrExisting'), 'new')]",
                            "type": "Microsoft.Network/publicIPAddresses",
                            "apiVersion": "2020-04-01",
                            "name": "[variables('var_publicIP1Name')]",
                            "location": "[parameters('location')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "sku": {
                                "name": "Standard"
                            },
                            "properties": {
                                "publicIPAllocationMethod": "Static",
                                "dnsSettings": {
                                    "domainNameLabel": "[format('{0}-{1}', toLower(parameters('deploymentPrefix')), uniqueString(resourceGroup().id))]"
                                }
                            }
                        },
                        {
                            "condition": "[equals(parameters('publicIP2NewOrExisting'), 'new')]",
                            "type": "Microsoft.Network/publicIPAddresses",
                            "apiVersion": "2020-04-01",
                            "name": "[variables('var_publicIP2Name')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "location": "[parameters('location')]",
                            "sku": {
                                "name": "Standard"
                            },
                            "properties": {
                                "publicIPAllocationMethod": "Static"
                            }
                        },
                        {
                            "condition": "[equals(parameters('publicIP3NewOrExisting'), 'new')]",
                            "type": "Microsoft.Network/publicIPAddresses",
                            "apiVersion": "2020-04-01",
                            "name": "[variables('var_publicIP3Name')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "location": "[parameters('location')]",
                            "sku": {
                                "name": "Standard"
                            },
                            "properties": {
                                "publicIPAllocationMethod": "Static"
                            }
                        },
                        {
                            "type": "Microsoft.Network/loadBalancers",
                            "apiVersion": "2020-04-01",
                            "name": "[variables('var_externalLBName')]",
                            "location": "[parameters('location')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "sku": {
                                "name": "Standard"
                            },
                            "properties": {
                                "frontendIPConfigurations": [
                                    {
                                        "name": "[variables('externalLBFEName')]",
                                        "properties": {
                                            "publicIPAddress": {
                                                "id": "[variables('publicIP1Id')]"
                                            }
                                        }
                                    }
                                ],
                                "backendAddressPools": [
                                    {
                                        "name": "[variables('externalLBBEName')]"
                                    }
                                ],
                                "loadBalancingRules": [
                                    {
                                        "properties": {
                                            "frontendIPConfiguration": {
                                                "id": "[variables('externalLBFEId')]"
                                            },
                                            "backendAddressPool": {
                                                "id": "[variables('externalLBBEId')]"
                                            },
                                            "probe": {
                                                "id": "[variables('externalLBProbeId')]"
                                            },
                                            "protocol": "Tcp",
                                            "frontendPort": 22,
                                            "backendPort": 2222,
                                            "enableFloatingIP": true,
                                            "idleTimeoutInMinutes": 5
                                        },
                                        "name": "ExternalLBRule-FE-ssh"
                                    },
                                    {
                                        "properties": {
                                            "frontendIPConfiguration": {
                                                "id": "[variables('externalLBFEId')]"
                                            },
                                            "backendAddressPool": {
                                                "id": "[variables('externalLBBEId')]"
                                            },
                                            "probe": {
                                                "id": "[variables('externalLBProbeId')]"
                                            },
                                            "protocol": "Tcp",
                                            "frontendPort": 80,
                                            "backendPort": 80,
                                            "enableFloatingIP": true,
                                            "idleTimeoutInMinutes": 5
                                        },
                                        "name": "ExternalLBRule-FE-http"
                                    },
                                    {
                                        "properties": {
                                            "frontendIPConfiguration": {
                                                "id": "[variables('externalLBFEId')]"
                                            },
                                            "backendAddressPool": {
                                                "id": "[variables('externalLBBEId')]"
                                            },
                                            "probe": {
                                                "id": "[variables('externalLBProbeId')]"
                                            },
                                            "protocol": "Udp",
                                            "frontendPort": 10551,
                                            "backendPort": 10551,
                                            "enableFloatingIP": true,
                                            "idleTimeoutInMinutes": 5
                                        },
                                        "name": "ExternalLBRule-FE-udp10551"
                                    }
                                ],
                                "inboundNatRules": [
                                    {
                                        "name": "[variables('externalLBName_NatRule_SSH_fga')]",
                                        "properties": {
                                            "frontendIPConfiguration": {
                                                "id": "[variables('externalLBFEId')]"
                                            },
                                            "protocol": "Tcp",
                                            "frontendPort": 50030,
                                            "backendPort": 22,
                                            "enableFloatingIP": false
                                        }
                                    },
                                    {
                                        "name": "[variables('externalLBName_NatRule_FGAdminPerm_fga')]",
                                        "properties": {
                                            "frontendIPConfiguration": {
                                                "id": "[variables('externalLBFEId')]"
                                            },
                                            "protocol": "Tcp",
                                            "frontendPort": 40030,
                                            "backendPort": 443,
                                            "enableFloatingIP": false
                                        }
                                    },
                                    {
                                        "name": "[variables('externalLBName_NatRule_SSH_fgb')]",
                                        "properties": {
                                            "frontendIPConfiguration": {
                                                "id": "[variables('externalLBFEId')]"
                                            },
                                            "protocol": "Tcp",
                                            "frontendPort": 50031,
                                            "backendPort": 22,
                                            "enableFloatingIP": false
                                        }
                                    },
                                    {
                                        "name": "[variables('externalLBName_NatRule_FGAdminPerm_fgb')]",
                                        "properties": {
                                            "frontendIPConfiguration": {
                                                "id": "[variables('externalLBFEId')]"
                                            },
                                            "protocol": "Tcp",
                                            "frontendPort": 40031,
                                            "backendPort": 443,
                                            "enableFloatingIP": false
                                        }
                                    }
                                ],
                                "probes": [
                                    {
                                        "properties": {
                                            "protocol": "Tcp",
                                            "port": 8008,
                                            "intervalInSeconds": 5,
                                            "numberOfProbes": 2
                                        },
                                        "name": "lbprobe"
                                    }
                                ]
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/publicIPAddresses', variables('var_publicIP1Name'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Network/networkInterfaces",
                            "apiVersion": "2020-04-01",
                            "name": "[variables('var_fgaNic1Name')]",
                            "location": "[parameters('location')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "properties": {
                                "ipConfigurations": [
                                    {
                                        "name": "ipconfig1",
                                        "properties": {
                                            "privateIPAddress": "[variables('sn1IPfga')]",
                                            "privateIPAllocationMethod": "Static",
                                            "subnet": {
                                                "id": "[variables('subnet1Id')]"
                                            },
                                            "loadBalancerBackendAddressPools": [
                                                {
                                                    "id": "[variables('externalLBBEId')]"
                                                }
                                            ],
                                            "loadBalancerInboundNatRules": [
                                                {
                                                    "id": "[variables('externalLBId_NatRule_SSH_fga')]"
                                                },
                                                {
                                                    "id": "[variables('externalLBId_NatRule_FGAdminPerm_fga')]"
                                                }
                                            ]
                                        }
                                    }
                                ],
                                "enableIPForwarding": true,
                                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                                "networkSecurityGroup": {
                                    "id": "[variables('nsgId')]"
                                }
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/loadBalancers', variables('var_externalLBName'))]",
                                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('var_nsgName'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Network/networkInterfaces",
                            "apiVersion": "2020-04-01",
                            "name": "[variables('var_fgbNic1Name')]",
                            "location": "[parameters('location')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "properties": {
                                "ipConfigurations": [
                                    {
                                        "name": "ipconfig1",
                                        "properties": {
                                            "privateIPAddress": "[variables('sn1IPfgb')]",
                                            "privateIPAllocationMethod": "Static",
                                            "subnet": {
                                                "id": "[variables('subnet1Id')]"
                                            },
                                            "loadBalancerBackendAddressPools": [
                                                {
                                                    "id": "[variables('externalLBBEId')]"
                                                }
                                            ],
                                            "loadBalancerInboundNatRules": [
                                                {
                                                    "id": "[variables('externalLBId_NatRule_SSH_fgb')]"
                                                },
                                                {
                                                    "id": "[variables('externalLBId_NatRule_FGAdminPerm_fgb')]"
                                                }
                                            ]
                                        }
                                    }
                                ],
                                "enableIPForwarding": true,
                                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                                "networkSecurityGroup": {
                                    "id": "[variables('nsgId')]"
                                }
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/loadBalancers', variables('var_externalLBName'))]",
                                "[resourceId('Microsoft.Network/networkInterfaces', variables('var_fgaNic1Name'))]",
                                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('var_nsgName'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Network/networkInterfaces",
                            "apiVersion": "2020-04-01",
                            "name": "[variables('var_fgaNic2Name')]",
                            "location": "[parameters('location')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "properties": {
                                "ipConfigurations": [
                                    {
                                        "name": "ipconfig1",
                                        "properties": {
                                            "privateIPAddress": "[variables('sn2IPfga')]",
                                            "privateIPAllocationMethod": "Static",
                                            "subnet": {
                                                "id": "[variables('subnet2Id')]"
                                            },
                                            "loadBalancerBackendAddressPools": [
                                                {
                                                    "id": "[variables('internalLBBEId')]"
                                                }
                                            ]
                                        }
                                    }
                                ],
                                "enableIPForwarding": true,
                                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                                "networkSecurityGroup": {
                                    "id": "[variables('nsgId')]"
                                }
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/loadBalancers', variables('var_internalLBName'))]",
                                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('var_nsgName'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Network/networkInterfaces",
                            "apiVersion": "2020-04-01",
                            "name": "[variables('var_fgbNic2Name')]",
                            "location": "[parameters('location')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "properties": {
                                "ipConfigurations": [
                                    {
                                        "name": "ipconfig1",
                                        "properties": {
                                            "privateIPAddress": "[variables('sn2IPfgb')]",
                                            "privateIPAllocationMethod": "Static",
                                            "subnet": {
                                                "id": "[variables('subnet2Id')]"
                                            },
                                            "loadBalancerBackendAddressPools": [
                                                {
                                                    "id": "[variables('internalLBBEId')]"
                                                }
                                            ]
                                        }
                                    }
                                ],
                                "enableIPForwarding": true,
                                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                                "networkSecurityGroup": {
                                    "id": "[variables('nsgId')]"
                                }
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/networkInterfaces', variables('var_fgaNic2Name'))]",
                                "[resourceId('Microsoft.Network/loadBalancers', variables('var_internalLBName'))]",
                                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('var_nsgName'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Network/networkInterfaces",
                            "apiVersion": "2020-04-01",
                            "name": "[variables('var_fgaNic3Name')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "location": "[parameters('location')]",
                            "properties": {
                                "ipConfigurations": [
                                    {
                                        "name": "ipconfig1",
                                        "properties": {
                                            "privateIPAllocationMethod": "Static",
                                            "privateIPAddress": "[variables('sn3IPfga')]",
                                            "subnet": {
                                                "id": "[variables('subnet3Id')]"
                                            }
                                        }
                                    }
                                ],
                                "enableIPForwarding": true,
                                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                                "networkSecurityGroup": {
                                    "id": "[variables('nsgId')]"
                                }
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('var_nsgName'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Network/networkInterfaces",
                            "apiVersion": "2020-04-01",
                            "name": "[variables('var_fgbNic3Name')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "location": "[parameters('location')]",
                            "properties": {
                                "ipConfigurations": [
                                    {
                                        "name": "ipconfig1",
                                        "properties": {
                                            "privateIPAllocationMethod": "Static",
                                            "privateIPAddress": "[variables('sn3IPfgb')]",
                                            "subnet": {
                                                "id": "[variables('subnet3Id')]"
                                            }
                                        }
                                    }
                                ],
                                "enableIPForwarding": true,
                                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                                "networkSecurityGroup": {
                                    "id": "[variables('nsgId')]"
                                }
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('var_nsgName'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Network/networkInterfaces",
                            "apiVersion": "2020-04-01",
                            "name": "[variables('var_fgaNic4Name')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "location": "[parameters('location')]",
                            "properties": {
                                "ipConfigurations": [
                                    {
                                        "name": "ipconfig1",
                                        "properties": {
                                            "privateIPAllocationMethod": "Static",
                                            "privateIPAddress": "[variables('sn4IPfga')]",
                                            "publicIPAddress": "[if(not(equals(parameters('publicIP2NewOrExisting'), 'none')), variables('publicIPAddress2Id'), null())]",
                                            "subnet": {
                                                "id": "[variables('subnet4Id')]"
                                            }
                                        }
                                    }
                                ],
                                "enableIPForwarding": true,
                                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                                "networkSecurityGroup": {
                                    "id": "[variables('nsgId')]"
                                }
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('var_nsgName'))]",
                                "[resourceId('Microsoft.Network/publicIPAddresses', variables('var_publicIP2Name'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Network/networkInterfaces",
                            "apiVersion": "2020-04-01",
                            "name": "[variables('var_fgbNic4Name')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "location": "[parameters('location')]",
                            "properties": {
                                "ipConfigurations": [
                                    {
                                        "name": "ipconfig1",
                                        "properties": {
                                            "privateIPAllocationMethod": "Static",
                                            "privateIPAddress": "[variables('sn4IPfgb')]",
                                            "publicIPAddress": "[if(not(equals(parameters('publicIP3NewOrExisting'), 'none')), variables('publicIPAddress3Id'), null())]",
                                            "subnet": {
                                                "id": "[variables('subnet4Id')]"
                                            }
                                        }
                                    }
                                ],
                                "enableIPForwarding": true,
                                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                                "networkSecurityGroup": {
                                    "id": "[variables('nsgId')]"
                                }
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('var_nsgName'))]",
                                "[resourceId('Microsoft.Network/publicIPAddresses', variables('var_publicIP3Name'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Compute/virtualMachines",
                            "apiVersion": "2021-07-01",
                            "name": "[variables('var_fgaVmName')]",
                            "location": "[parameters('location')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "identity": {
                                "type": "SystemAssigned"
                            },
                            "zones": "[if(variables('useAZ'), variables('zone1'), null())]",
                            "plan": {
                                "name": "[parameters('fortiGateImageSKU')]",
                                "publisher": "[variables('imagePublisher')]",
                                "product": "[variables('imageOffer')]"
                            },
                            "properties": {
                                "hardwareProfile": {
                                    "vmSize": "[parameters('instanceType')]"
                                },
                                "availabilitySet": "[if(not(variables('useAZ')), variables('availabilitySetId'), null())]",
                                "osProfile": {
                                    "computerName": "[variables('var_fgaVmName')]",
                                    "adminUsername": "[parameters('adminUsername')]",
                                    "adminPassword": "[parameters('adminPassword')]",
                                    "customData": "[base64(if(equals(parameters('fortiGateLicenseBYOLA'), ''), format('config system sdn-connector\nedit AzureSDN\nset type azure\nnext\nend\nconfig router static\n edit 1\n set gateway {0}\n set device port1\n next\n edit 2\n set dst {1}\n set gateway {2}\n set device port2\n next\n edit 3\nset dst 168.63.129.16 255.255.255.255\nset device port2\n set gateway {3}\n next\nedit 4\nset dst 168.63.129.16 255.255.255.255\nset device port1\n set gateway {4}\n next\n end\n config system probe-response\n set http-probe-value OK\n set mode http-probe\n end\n config system interface\n edit port1\n set mode static\n set ip {5}/{6}\n set description external\n set allowaccess probe-response\n next\n edit port2\n set mode static\n set ip {7}/{8}\n set description internal\n set allowaccess probe-response\n next\n edit port3\n set mode static\n set ip {9}/{10}\n set description hasyncport\n next\n edit port4\n set mode static\n set ip {11}/{12}\n set description management\n set allowaccess ping https ssh ftm\n next\n end\n config system ha\n set group-name AzureHA\n set mode a-p\n set hbdev port3 100\n set session-pickup enable\n set session-pickup-connectionless enable\n set ha-mgmt-status enable\n config ha-mgmt-interfaces\n edit 1\n set interface port4\n set gateway {13}\n next\n end\n set override disable\n set priority 255\n set unicast-hb enable\n set unicast-hb-peerip {14}\n end\n{15}\n{16}\n{17}{18}\n{19}\n', variables('sn1GatewayIP'), parameters('vnetAddressPrefix'), variables('sn2GatewayIP'), variables('sn2GatewayIP'), variables('sn1GatewayIP'), variables('sn1IPfga'), variables('sn1CIDRmask'), variables('sn2IPfga'), variables('sn2CIDRmask'), variables('sn3IPfga'), variables('sn3CIDRmask'), variables('sn4IPfga'), variables('sn4CIDRmask'), variables('sn4GatewayIP'), variables('sn3IPfgb'), format('\nconfig firewall vip\nedit \"Ubuntu-SSH-VIP\"\nset extip {0}\nset mappedip \"{1}\"\nset extintf \"any\"\nset portforward enable\nset extport 2222\nset mappedport 22\nnext\nend\n', reference(resourceId('Microsoft.Network/publicIPAddresses', variables('var_publicIP1Name')), '2020-04-01').ipAddress, parameters('subnet7StartAddress')), variables('fortiGateIPv4Policy'), variables('fmgCustomData'), parameters('fortiGateAdditionalCustomData'), variables('fgaCustomDataFlexVM')), format('{0}{1}{2}{3}{4}', variables('customDataHeader'), format('config system sdn-connector\nedit AzureSDN\nset type azure\nnext\nend\nconfig router static\n edit 1\n set gateway {0}\n set device port1\n next\n edit 2\n set dst {1}\n set gateway {2}\n set device port2\n next\n edit 3\nset dst 168.63.129.16 255.255.255.255\nset device port2\n set gateway {3}\n next\nedit 4\nset dst 168.63.129.16 255.255.255.255\nset device port1\n set gateway {4}\n next\n end\n config system probe-response\n set http-probe-value OK\n set mode http-probe\n end\n config system interface\n edit port1\n set mode static\n set ip {5}/{6}\n set description external\n set allowaccess probe-response\n next\n edit port2\n set mode static\n set ip {7}/{8}\n set description internal\n set allowaccess probe-response\n next\n edit port3\n set mode static\n set ip {9}/{10}\n set description hasyncport\n next\n edit port4\n set mode static\n set ip {11}/{12}\n set description management\n set allowaccess ping https ssh ftm\n next\n end\n config system ha\n set group-name AzureHA\n set mode a-p\n set hbdev port3 100\n set session-pickup enable\n set session-pickup-connectionless enable\n set ha-mgmt-status enable\n config ha-mgmt-interfaces\n edit 1\n set interface port4\n set gateway {13}\n next\n end\n set override disable\n set priority 255\n set unicast-hb enable\n set unicast-hb-peerip {14}\n end\n{15}\n{16}\n{17}{18}\n{19}\n', variables('sn1GatewayIP'), parameters('vnetAddressPrefix'), variables('sn2GatewayIP'), variables('sn2GatewayIP'), variables('sn1GatewayIP'), variables('sn1IPfga'), variables('sn1CIDRmask'), variables('sn2IPfga'), variables('sn2CIDRmask'), variables('sn3IPfga'), variables('sn3CIDRmask'), variables('sn4IPfga'), variables('sn4CIDRmask'), variables('sn4GatewayIP'), variables('sn3IPfgb'), format('\nconfig firewall vip\nedit \"Ubuntu-SSH-VIP\"\nset extip {0}\nset mappedip \"{1}\"\nset extintf \"any\"\nset portforward enable\nset extport 2222\nset mappedport 22\nnext\nend\n', reference(resourceId('Microsoft.Network/publicIPAddresses', variables('var_publicIP1Name')), '2020-04-01').ipAddress, parameters('subnet7StartAddress')), variables('fortiGateIPv4Policy'), variables('fmgCustomData'), parameters('fortiGateAdditionalCustomData'), variables('fgaCustomDataFlexVM')), variables('customDataLicenseHeader'), parameters('fortiGateLicenseBYOLA'), variables('customDataFooter'))))]"
                                },
                                "storageProfile": {
                                    "imageReference": {
                                        "publisher": "[variables('imagePublisher')]",
                                        "offer": "[variables('imageOffer')]",
                                        "sku": "[parameters('fortiGateImageSKU')]",
                                        "version": "[parameters('fortiGateImageVersion')]"
                                    },
                                    "osDisk": {
                                        "createOption": "FromImage"
                                    },
                                    "dataDisks": [
                                        {
                                            "diskSizeGB": 30,
                                            "lun": 0,
                                            "createOption": "Empty"
                                        }
                                    ]
                                },
                                "networkProfile": {
                                    "networkInterfaces": [
                                        {
                                            "properties": {
                                                "primary": true
                                            },
                                            "id": "[variables('fgaNic1Id')]"
                                        },
                                        {
                                            "properties": {
                                                "primary": false
                                            },
                                            "id": "[variables('fgaNic2Id')]"
                                        },
                                        {
                                            "properties": {
                                                "primary": false
                                            },
                                            "id": "[variables('fgaNic3Id')]"
                                        },
                                        {
                                            "properties": {
                                                "primary": false
                                            },
                                            "id": "[variables('fgaNic4Id')]"
                                        }
                                    ]
                                },
                                "diagnosticsProfile": {
                                    "bootDiagnostics": {
                                        "enabled": "[variables('serialConsoleEnabled')]",
                                        "storageUri": "[if(equals(parameters('fgtserialConsole'), 'yes'), reference(variables('var_serialConsoleStorageAccountName'), '2021-08-01').primaryEndpoints.blob, null())]"
                                    }
                                }
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Compute/availabilitySets', variables('var_availabilitySetName'))]",
                                "[resourceId('Microsoft.Network/networkInterfaces', variables('var_fgaNic1Name'))]",
                                "[resourceId('Microsoft.Network/networkInterfaces', variables('var_fgaNic2Name'))]",
                                "[resourceId('Microsoft.Network/networkInterfaces', variables('var_fgaNic3Name'))]",
                                "[resourceId('Microsoft.Network/networkInterfaces', variables('var_fgaNic4Name'))]",
                                "[resourceId('Microsoft.Network/publicIPAddresses', variables('var_publicIP1Name'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Compute/virtualMachines",
                            "apiVersion": "2021-07-01",
                            "name": "[variables('var_fgbVmName')]",
                            "location": "[parameters('location')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "identity": {
                                "type": "SystemAssigned"
                            },
                            "zones": "[if(variables('useAZ'), variables('zone2'), null())]",
                            "plan": {
                                "name": "[parameters('fortiGateImageSKU')]",
                                "publisher": "[variables('imagePublisher')]",
                                "product": "[variables('imageOffer')]"
                            },
                            "properties": {
                                "hardwareProfile": {
                                    "vmSize": "[parameters('instanceType')]"
                                },
                                "availabilitySet": "[if(not(variables('useAZ')), variables('availabilitySetId'), null())]",
                                "osProfile": {
                                    "computerName": "[variables('var_fgbVmName')]",
                                    "adminUsername": "[parameters('adminUsername')]",
                                    "adminPassword": "[parameters('adminPassword')]",
                                    "customData": "[base64(if(equals(parameters('fortiGateLicenseBYOLB'), ''), format('config system sdn-connector\nedit AzureSDN\nset type azure\nnext\nend\nconfig router static\n edit 1\n set gateway {0}\n set device port1\n next\n edit 2\n set dst {1}\n set gateway {2}\n set device port2\n next\n edit 3\nset dst 168.63.129.16 255.255.255.255\nset device port2\n set gateway {3}\n next\nedit 4\nset dst 168.63.129.16 255.255.255.255\nset device port1\n set gateway {4}\n next\n end\n config system probe-response\n set http-probe-value OK\n set mode http-probe\n end\n config system interface\n edit port1\n set mode static\n set ip {5}/{6}\n set description external\n set allowaccess probe-response\n next\n edit port2\n set mode static\n set ip {7}/{8}\n set description internal\n set allowaccess probe-response\n next\n edit port3\n set mode static\n set ip {9}/{10}\n set description hasyncport\n next\n edit port4\n set mode static\n set ip {11}/{12}\n set description management\n set allowaccess ping https ssh ftm\n next\n end\n config system ha\n set group-name AzureHA\n set mode a-p\n set hbdev port3 100\n set session-pickup enable\n set session-pickup-connectionless enable\n set ha-mgmt-status enable\n config ha-mgmt-interfaces\n edit 1\n set interface port4\n set gateway {13}\n next\n end\n set override disable\n set priority 1\n set unicast-hb enable\n set unicast-hb-peerip {14}\n end\n{15}\n{16}\n{17}{18}\n{19}\n', variables('sn1GatewayIP'), parameters('vnetAddressPrefix'), variables('sn2GatewayIP'), variables('sn2GatewayIP'), variables('sn1GatewayIP'), variables('sn1IPfgb'), variables('sn1CIDRmask'), variables('sn2IPfgb'), variables('sn2CIDRmask'), variables('sn3IPfgb'), variables('sn3CIDRmask'), variables('sn4IPfgb'), variables('sn4CIDRmask'), variables('sn4GatewayIP'), variables('sn3IPfga'), format('\nconfig firewall vip\nedit \"Ubuntu-SSH-VIP\"\nset extip {0}\nset mappedip \"{1}\"\nset extintf \"any\"\nset portforward enable\nset extport 2222\nset mappedport 22\nnext\nend\n', reference(resourceId('Microsoft.Network/publicIPAddresses', variables('var_publicIP1Name')), '2020-04-01').ipAddress, parameters('subnet7StartAddress')), variables('fortiGateIPv4Policy'), variables('fmgCustomData'), parameters('fortiGateAdditionalCustomData'), variables('fgBCustomDataFlexVM')), format('{0}{1}{2}{3}{4}', variables('customDataHeader'), format('config system sdn-connector\nedit AzureSDN\nset type azure\nnext\nend\nconfig router static\n edit 1\n set gateway {0}\n set device port1\n next\n edit 2\n set dst {1}\n set gateway {2}\n set device port2\n next\n edit 3\nset dst 168.63.129.16 255.255.255.255\nset device port2\n set gateway {3}\n next\nedit 4\nset dst 168.63.129.16 255.255.255.255\nset device port1\n set gateway {4}\n next\n end\n config system probe-response\n set http-probe-value OK\n set mode http-probe\n end\n config system interface\n edit port1\n set mode static\n set ip {5}/{6}\n set description external\n set allowaccess probe-response\n next\n edit port2\n set mode static\n set ip {7}/{8}\n set description internal\n set allowaccess probe-response\n next\n edit port3\n set mode static\n set ip {9}/{10}\n set description hasyncport\n next\n edit port4\n set mode static\n set ip {11}/{12}\n set description management\n set allowaccess ping https ssh ftm\n next\n end\n config system ha\n set group-name AzureHA\n set mode a-p\n set hbdev port3 100\n set session-pickup enable\n set session-pickup-connectionless enable\n set ha-mgmt-status enable\n config ha-mgmt-interfaces\n edit 1\n set interface port4\n set gateway {13}\n next\n end\n set override disable\n set priority 1\n set unicast-hb enable\n set unicast-hb-peerip {14}\n end\n{15}\n{16}\n{17}{18}\n{19}\n', variables('sn1GatewayIP'), parameters('vnetAddressPrefix'), variables('sn2GatewayIP'), variables('sn2GatewayIP'), variables('sn1GatewayIP'), variables('sn1IPfgb'), variables('sn1CIDRmask'), variables('sn2IPfgb'), variables('sn2CIDRmask'), variables('sn3IPfgb'), variables('sn3CIDRmask'), variables('sn4IPfgb'), variables('sn4CIDRmask'), variables('sn4GatewayIP'), variables('sn3IPfga'), format('\nconfig firewall vip\nedit \"Ubuntu-SSH-VIP\"\nset extip {0}\nset mappedip \"{1}\"\nset extintf \"any\"\nset portforward enable\nset extport 2222\nset mappedport 22\nnext\nend\n', reference(resourceId('Microsoft.Network/publicIPAddresses', variables('var_publicIP1Name')), '2020-04-01').ipAddress, parameters('subnet7StartAddress')), variables('fortiGateIPv4Policy'), variables('fmgCustomData'), parameters('fortiGateAdditionalCustomData'), variables('fgBCustomDataFlexVM')), variables('customDataLicenseHeader'), parameters('fortiGateLicenseBYOLB'), variables('customDataFooter'))))]"
                                },
                                "storageProfile": {
                                    "imageReference": {
                                        "publisher": "[variables('imagePublisher')]",
                                        "offer": "[variables('imageOffer')]",
                                        "sku": "[parameters('fortiGateImageSKU')]",
                                        "version": "[parameters('fortiGateImageVersion')]"
                                    },
                                    "osDisk": {
                                        "createOption": "FromImage"
                                    },
                                    "dataDisks": [
                                        {
                                            "diskSizeGB": 30,
                                            "lun": 0,
                                            "createOption": "Empty"
                                        }
                                    ]
                                },
                                "networkProfile": {
                                    "networkInterfaces": [
                                        {
                                            "properties": {
                                                "primary": true
                                            },
                                            "id": "[variables('fgbNic1Id')]"
                                        },
                                        {
                                            "properties": {
                                                "primary": false
                                            },
                                            "id": "[variables('fgbNic2Id')]"
                                        },
                                        {
                                            "properties": {
                                                "primary": false
                                            },
                                            "id": "[variables('fgbNic3Id')]"
                                        },
                                        {
                                            "properties": {
                                                "primary": false
                                            },
                                            "id": "[variables('fgbNic4Id')]"
                                        }
                                    ]
                                },
                                "diagnosticsProfile": {
                                    "bootDiagnostics": {
                                        "enabled": "[variables('serialConsoleEnabled')]",
                                        "storageUri": "[if(equals(parameters('fgtserialConsole'), 'yes'), reference(variables('var_serialConsoleStorageAccountName'), '2021-08-01').primaryEndpoints.blob, null())]"
                                    }
                                }
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Compute/availabilitySets', variables('var_availabilitySetName'))]",
                                "[resourceId('Microsoft.Network/networkInterfaces', variables('var_fgbNic1Name'))]",
                                "[resourceId('Microsoft.Network/networkInterfaces', variables('var_fgbNic2Name'))]",
                                "[resourceId('Microsoft.Network/networkInterfaces', variables('var_fgbNic3Name'))]",
                                "[resourceId('Microsoft.Network/networkInterfaces', variables('var_fgbNic4Name'))]",
                                "[resourceId('Microsoft.Network/publicIPAddresses', variables('var_publicIP1Name'))]"
                            ]
                        }
                    ],
                    "outputs": {
                        "fortiGatePublicIP": {
                            "type": "string",
                            "value": "[if(equals(parameters('publicIP1NewOrExisting'), 'new'), reference(variables('publicIP1Id')).ipAddress, '')]"
                        },
                        "fortiGateFQDN": {
                            "type": "string",
                            "value": "[if(equals(parameters('publicIP1NewOrExisting'), 'new'), reference(variables('publicIP1Id')).dnsSettings.fqdn, '')]"
                        },
                        "fortiGateAManagementPublicIP": {
                            "type": "string",
                            "value": "[if(equals(parameters('publicIP2NewOrExisting'), 'new'), reference(variables('publicIP2Id')).ipAddress, '')]"
                        },
                        "fortiGateBManagementPublicIP": {
                            "type": "string",
                            "value": "[if(equals(parameters('publicIP3NewOrExisting'), 'new'), reference(variables('publicIP3Id')).ipAddress, '')]"
                        },
                        "externalLBFEName": {
                            "type": "string",
                            "value": "[variables('externalLBFEName')]"
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "fortiwebDeployment",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'networkDeployment')]"
            ],
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "subnet4StartAddress": {
                        "value": "[parameters('subnet4StartAddress')]"
                    },
                    "subnet7StartAddress": {
                        "value": "[parameters('subnet7StartAddress')]"
                    },
                    "vnetAddressPrefix": {
                        "value": "[parameters('vnetAddressPrefix')]"
                    },
                    "acceleratedNetworking": {
                        "value": "[parameters('acceleratedNetworking')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "availabilityOptions": {
                        "value": "[parameters('availabilityOptions')]"
                    },
                    "deploymentPrefix": {
                        "value": "[parameters('deploymentPrefix')]"
                    },
                    "fortinetTags": {
                        "value": "[parameters('fortinetTags')]"
                    },
                    "fortiWebAAdditionalCustomData": {
                        "value": "[parameters('fortiWebAAdditionalCustomData')]"
                    },
                    "fortiWebBAdditionalCustomData": {
                        "value": "[parameters('fortiWebBAdditionalCustomData')]"
                    },
                    "fortiWebHaGroupId": {
                        "value": "[parameters('fortiWebHaGroupId')]"
                    },
                    "fortiWebImageSKU": {
                        "value": "[parameters('fortiWebImageSKU')]"
                    },
                    "fortiWebImageVersion": {
                        "value": "[parameters('fortiWebImageVersion')]"
                    },
                    "fwbserialConsole": {
                        "value": "[parameters('fwbserialConsole')]"
                    },
                    "instanceType": {
                        "value": "[parameters('instanceType')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "publicIPName": {
                        "value": "[parameters('publicIPName')]"
                    },
                    "publicIPNewOrExistingOrNone": {
                        "value": "[parameters('publicIPNewOrExistingOrNone')]"
                    },
                    "publicIPResourceGroup": {
                        "value": "[parameters('publicIPResourceGroup')]"
                    },
                    "publicIPType": {
                        "value": "[parameters('publicIPType')]"
                    },
                    "subnet5Name": {
                        "value": "[parameters('subnet5Name')]"
                    },
                    "subnet5Prefix": {
                        "value": "[parameters('subnet5Prefix')]"
                    },
                    "subnet5StartAddress": {
                        "value": "[parameters('subnet5StartAddress')]"
                    },
                    "subnet6Name": {
                        "value": "[parameters('subnet6Name')]"
                    },
                    "subnet6Prefix": {
                        "value": "[parameters('subnet6Prefix')]"
                    },
                    "subnet6StartAddress": {
                        "value": "[parameters('subnet6StartAddress')]"
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "vnetNewOrExisting": {
                        "value": "[parameters('vnetNewOrExisting')]"
                    },
                    "vnetResourceGroup": {
                        "value": "[parameters('vnetResourceGroup')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "metadata": {
                        "_generator": {
                            "name": "bicep",
                            "version": "0.15.31.15270",
                            "templateHash": "6449758037676644442"
                        }
                    },
                    "parameters": {
                        "adminUsername": {
                            "type": "string"
                        },
                        "adminPassword": {
                            "type": "securestring"
                        },
                        "deploymentPrefix": {
                            "type": "string"
                        },
                        "fortiWebImageSKU": {
                            "type": "string"
                        },
                        "fortiWebImageVersion": {
                            "type": "string"
                        },
                        "fortiWebHaGroupId": {
                            "type": "int"
                        },
                        "fortiWebAAdditionalCustomData": {
                            "type": "string"
                        },
                        "fortiWebBAdditionalCustomData": {
                            "type": "string"
                        },
                        "instanceType": {
                            "type": "string"
                        },
                        "availabilityOptions": {
                            "type": "string"
                        },
                        "acceleratedNetworking": {
                            "type": "bool"
                        },
                        "publicIPNewOrExistingOrNone": {
                            "type": "string"
                        },
                        "publicIPName": {
                            "type": "string"
                        },
                        "publicIPResourceGroup": {
                            "type": "string"
                        },
                        "publicIPType": {
                            "type": "string"
                        },
                        "vnetNewOrExisting": {
                            "type": "string"
                        },
                        "vnetName": {
                            "type": "string"
                        },
                        "vnetResourceGroup": {
                            "type": "string"
                        },
                        "subnet4StartAddress": {
                            "type": "string"
                        },
                        "subnet5Name": {
                            "type": "string"
                        },
                        "subnet5Prefix": {
                            "type": "string"
                        },
                        "subnet5StartAddress": {
                            "type": "string"
                        },
                        "subnet6Name": {
                            "type": "string"
                        },
                        "subnet6Prefix": {
                            "type": "string"
                        },
                        "subnet6StartAddress": {
                            "type": "string"
                        },
                        "fwbserialConsole": {
                            "type": "string"
                        },
                        "location": {
                            "type": "securestring"
                        },
                        "fortinetTags": {
                            "type": "object"
                        },
                        "vnetAddressPrefix": {
                            "type": "string"
                        },
                        "subnet7StartAddress": {
                            "type": "string"
                        }
                    },
                    "variables": {
                        "imagePublisher": "fortinet",
                        "imageOffer": "fortinet_fortiweb-vm_v5",
                        "var_availabilitySetName": "[format('{0}-FWB-AvailabilitySet', parameters('deploymentPrefix'))]",
                        "availabilitySetId": {
                            "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('var_availabilitySetName'))]"
                        },
                        "var_vnetName": "[if(equals(parameters('vnetName'), ''), format('{0}-VNET', parameters('deploymentPrefix')), parameters('vnetName'))]",
                        "subnet5Id": "[if(equals(parameters('vnetNewOrExisting'), 'new'), resourceId('Microsoft.Network/virtualNetworks/subnets', variables('var_vnetName'), parameters('subnet5Name')), resourceId(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', variables('var_vnetName'), parameters('subnet5Name')))]",
                        "subnet6Id": "[if(equals(parameters('vnetNewOrExisting'), 'new'), resourceId('Microsoft.Network/virtualNetworks/subnets', variables('var_vnetName'), parameters('subnet6Name')), resourceId(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', variables('var_vnetName'), parameters('subnet6Name')))]",
                        "fwbGlobalDataBody": "config system settings\n set enable-file-upload enable\n end\nconfig system admin\nedit admin\nset password Q1w2e34567890--\nend\n",
                        "fwbACustomDataBodyHA": "[format('config system ha\n set override enable\n set mode active-active-high-volume\n set group-id {0}\n set group-name {1}\n set priority 1\n set tunnel-local {2}\n set tunnel-peer {3}\n set monitor port1 port2\nend\n\n', parameters('fortiWebHaGroupId'), toLower(parameters('deploymentPrefix')), variables('sn2IPfwbA'), variables('sn2IPfwbB'))]",
                        "fwbStaticRoute": "[format('\nconfig router static\n edit 1\n set dst {0}\n set gateway {1}\n set device port2\n next\n end\n', parameters('vnetAddressPrefix'), variables('sn2GatewayIP'))]",
                        "fwbServerPool": "[format('\nconfig server-policy server-pool\n edit \"DVWA_POOL\"\n config pserver-list\n edit 1\n set ip {0}\n next\n end\n next\n end\n', parameters('subnet7StartAddress'))]",
                        "configFortiGateIntegrationA": "[format('\nconfig system fortigate-integration\nset address {0}\nset port 443\nset protocol HTTPS\nset username {1}\nset password {2}\nset flag enable\nend\n', parameters('subnet4StartAddress'), parameters('adminUsername'), parameters('adminPassword'))]",
                        "letsEncrypt": "[format('\nconfig system certificate letsencrypt\nedit \"DVWA_LE_CERTIFICATE\"\nset domain {0}.{1}.cloudapp.azure.com\nset validation-method TLS-ALPN\nnext\nend\n', parameters('deploymentPrefix'), parameters('location'))]",
                        "wvsProfile": "[format('\nconfig wvs profile\nedit \"DVWASCANPROFILE\"\nset scan-target https://{0}\nset scan-template \"OWASP Top 10\"\nset custom-header0 \"Cookie: security=low; PHPSESSID=XXXXXXXXXXXXXXXXXXXX\"\nset form-based-authentication enable\nset form-based-username pablo\nset form-based-password letmein\nset form-based-auth-url https://{1}/login.php\nset username-field username\nset password-field password\nset session-check-url https://10.0.5.5/index.php\nset session-check-string Welcome\nset data-format %u=%U&%p=%P\nnext\nend\n', variables('sn1IPfwbA'), variables('sn1IPfwbA'))]",
                        "bulkPoCConfig": "config system global\r\nset admintimeout 480\r\nset timezone 12\r\nend\r\nconfig log traffic-log\r\nset status enable\r\nset packet-log enable\r\nend\r\nconfig system feature-visibility\r\nset wvs enable\r\nset fortigate-integration enable\r\nend\r\nconfig waf url-access url-access-rule\r\nedit \"DVWA_URL_ACCCESS_RULE\"\r\nset action alert_deny\r\nconfig  match-condition\r\nedit 1\r\nset reg-exp ^/about.php.*\r\nset type regex-expression\r\nnext\r\nend\r\nnext\r\nend\r\nconfig waf url-access url-access-policy\r\nedit \"DVWA_URL_ACCESS_POLICY\"\r\nconfig  rule\r\nedit 1\r\nset url-access-rule-name DVWA_URL_ACCCESS_RULE\r\nnext\r\nend\r\nnext\r\nend\r\nconfig waf geo-block-list\r\nedit \"DVWA_GEO_PROTECTION\"\r\nconfig  country-list\r\nedit 1\r\nset country-name Afghanistan\r\nnext\r\nend\r\nnext\r\nend\r\nconfig waf ip-list\r\nedit \"DVWA_IP_LIST\"\r\nset action alert_deny\r\nconfig  members\r\nedit 1\r\nset type black-ip\r\nset ip 1.1.1.1\r\nnext\r\nend\r\nnext\r\nend\r\nconfig user local-user\r\nedit \"demo\"\r\nset username demo\r\nset password demo\r\nnext\r\nend\r\nconfig user user-group\r\nedit \"DVWA_USER_GROUP\"\r\nconfig  members\r\nedit 1\r\nset local-name demo\r\nnext\r\nend\r\nnext\r\nend\r\nconfig waf http-authen http-authen-rule\r\nedit \"DVWA_AUTH_RULE\"\r\nconfig  rule\r\nedit 1\r\nset user-realm REALM\r\nset user-group DVWA_USER_GROUP\r\nset request-url /instructions.php\r\nnext\r\nend\r\nnext\r\nend\r\nconfig waf http-authen http-authen-policy\r\nedit \"DVWA_AUTH_POLICY\"\r\nconfig  rule\r\nedit 1\r\nset http-authen-rule DVWA_AUTH_RULE\r\nnext\r\nend\r\nnext\r\nend\r\nconfig waf hidden-fields-rule\r\nedit \"DVWA_HIDDEN_FIELD_RULE\"\r\nconfig  hidden-field-name\r\nedit 1\r\nset argument MAX_FILE_SIZE\r\nnext\r\nend\r\nset action alert_deny\r\nset request-file /vulnerabilities/upload/\r\nset action-url0 /vulnerabilities/upload/\r\nnext\r\nend\r\nconfig waf hidden-fields-protection\r\nedit \"DVWA_HIDDEN_FIELD\"\r\nconfig  hidden_fields_list\r\nedit 1\r\nset hidden-field-rule DVWA_HIDDEN_FIELD_RULE\r\nnext\r\nend\r\nnext\r\nend\r\nconfig waf user-tracking rule\r\nedit \"DVWA_USER_TRACKING_RULE\"\r\nset authentication-url /login.php\r\nset username-parameter username\r\nset password-parameter password\r\nset session-id-name PHPSESSID\r\nset logoff-path /logout.php\r\nconfig  match-condition\r\nedit 1\r\nset value 302\r\nnext\r\nend\r\nnext\r\nend\r\nconfig waf user-tracking policy\r\nedit \"DVWA_USER_TRACKING\"\r\nconfig  input-rule-list\r\nedit 1\r\nset input-rule DVWA_USER_TRACKING_RULE\r\nnext\r\nend\r\nnext\r\nend\r\nconfig waf url-rewrite url-rewrite-rule\r\nedit \"DVWA_URL_REWRITE_FORTINET\"\r\nset action redirect-301\r\nset location https://www.fortinet.com\r\nconfig  header-removal\r\nend\r\nconfig  response-header-removal\r\nend\r\nconfig  match-condition\r\nedit 1\r\nset object http-url\r\nset reg-exp ^/fortinet.*\r\nnext\r\nend\r\nnext\r\nedit \"DVWA_URL_REWRITE_CHANGE\"\r\nset url-status enable\r\nset url /vulnerabilities/csrf/\r\nconfig  header-removal\r\nend\r\nconfig  response-header-removal\r\nend\r\nconfig  match-condition\r\nedit 1\r\nset object http-url\r\nset reg-exp ^/change.*\r\nnext\r\nend\r\nnext\r\nend\r\nconfig waf url-rewrite url-rewrite-policy\r\nedit \"DVWA_URL_REWRITE\"\r\nconfig  rule\r\nedit 1\r\nset url-rewrite-rule-name DVWA_URL_REWRITE_FORTINET\r\nnext\r\nedit 2\r\nset url-rewrite-rule-name DVWA_URL_REWRITE_CHANGE\r\nnext\r\nend\r\nnext\r\nend\r\nconfig waf allow-method-policy\r\nedit \"DVWA_ALLOW_METHOD\"\r\nset allow-method get post \r\nnext\r\nend\r\nconfig waf file-upload-restriction-rule\r\nedit \"DVWA_WEBSHELL_UPLOADING\"\r\nset request-type regular\r\nset request-file ^/.*\r\nset type Block\r\nset enable_base64_decode disable\r\nconfig  file-types\r\nedit 1\r\nset file-type-name EXE(.exe)\r\nset file-type-id 00126\r\nnext\r\nedit 3\r\nset file-type-name JSP(.jsp)\r\nset file-type-id 00153\r\nnext\r\nedit 4\r\nset file-type-name ASPX(.aspx)\r\nset file-type-id 00154\r\nnext\r\nedit 5\r\nset file-type-name SQL(.sql)\r\nset file-type-id 00166\r\nnext\r\nend\r\nconfig  custom-file-types\r\nend\r\nnext\r\nend\r\nconfig waf file-upload-restriction-policy\r\nedit \"DVWA_FILE_SECURITY_POLICY\"\r\nset av-scan enable\r\nconfig  rule\r\nedit 1\r\nset file-upload-restriction-rule DVWA_WEBSHELL_UPLOADING\r\nnext\r\nend\r\nnext\r\nend\r\nconfig waf webshell-detection-policy\r\nedit \"DVWA_WEBSHELL_UPLOADING\"\r\nnext\r\nend\r\nconfig waf csrf-protection\r\nedit \"DVWA_CSRF_PROTECTION\"\r\nset action alert_deny\r\nconfig  csrf-url-list\r\nedit 1\r\nset request-url /vulnerabilities/csrf/\r\nset parameter-filter enable\r\nset parameter-name password_new\r\nset parameter-value-type regular\r\nset parameter-value .*\r\nnext\r\nend\r\nconfig  csrf-page-list\r\nedit 1\r\nset request-url /vulnerabilities/csrf/\r\nnext\r\nend\r\nnext\r\nend\r\nconfig waf mitb-rule\r\nedit \"DVWA_MAN_IN_THE_BROWSER_RULE\"\r\nset action alert_deny\r\nset severity Medium\r\nset request-url /login.php\r\nset post-url /login.php\r\nconfig  protected-parameter-list\r\nedit \"username\"\r\nset obfuscate enable\r\nnext\r\nedit \"password\"\r\nset type password-input\r\nset obfuscate enable\r\nnext\r\nend\r\nconfig  allowed-external-domains-list\r\nend\r\nnext\r\nend\r\nconfig waf mitb-policy\r\nedit \"DVWA_MAN_IN_THE_BROWSER\"\r\nconfig  rule-list\r\nedit 1\r\nset mitb-rule DVWA_MAN_IN_THE_BROWSER_RULE\r\nnext\r\nend\r\nnext\r\nend\r\nconfig waf input-rule\r\nedit \"DVWA_PARAMETER_VALIDATION_RULE\"\r\nset severity Medium\r\nset request-type regular\r\nset request-file ^/vulnerabilities/exec/.*\r\nconfig  rule-list\r\nedit 1\r\nset type-checked enable\r\nset argument-name ip\r\nset location url body \r\nset data-type Address\r\nnext\r\nend\r\nnext\r\nend\r\nconfig waf parameter-validation-rule\r\nedit \"DVWA_PARAMETER_VALIDATION\"\r\nconfig  input-rule-list\r\nedit 1\r\nset input-rule DVWA_PARAMETER_VALIDATION_RULE\r\nnext\r\nend\r\nnext\r\nend\r\nconfig waf ip-intelligence\r\nedit 1\r\nset category Botnet\r\nset status enable\r\nnext\r\nedit 2\r\nset category \"Anonymous Proxy\"\r\nset status enable\r\nnext\r\nedit 3\r\nset category Phishing\r\nset status enable\r\nnext\r\nedit 4\r\nset category Spam\r\nset status enable\r\nnext\r\nedit 5\r\nset category Others\r\nset status enable\r\nset action alert\r\nnext\r\nedit 6\r\nset category Tor\r\nset status enable\r\nnext\r\nend\r\nconfig waf signature\r\nedit \"DVWA_SIGNATURE_PROFILE\"\r\nconfig  main_class_list\r\nedit \"010000000\"\r\nset fpm-status disable\r\nset action alert_deny\r\nset severity High\r\nnext\r\nedit \"020000000\"\r\nset fpm-status disable\r\nnext\r\nedit \"030000000\"\r\nset action alert_deny\r\nset severity High\r\nnext\r\nedit \"040000000\"\r\nnext\r\nedit \"050000000\"\r\nset fpm-status disable\r\nset action alert_deny\r\nset severity High\r\nnext\r\nedit \"060000000\"\r\nset fpm-status disable\r\nnext\r\nedit \"070000000\"\r\nset fpm-status disable\r\nnext\r\nedit \"080000000\"\r\nset fpm-status disable\r\nset severity Low\r\nnext\r\nedit \"090000000\"\r\nset fpm-status disable\r\nset action alert_deny\r\nset severity High\r\nnext\r\nedit \"100000000\"\r\nset status disable\r\nset fpm-status disable\r\nset severity High\r\nnext\r\nedit \"120000000\"\r\nset status disable\r\nset severity High\r\nnext\r\nend\r\nconfig  sub_class_disable_list\r\nend\r\nconfig  signature_disable_list\r\nedit \"060030001\"\r\nnext\r\nedit \"060120001\"\r\nnext\r\nedit \"080080005\"\r\nnext\r\nedit \"080200001\"\r\nnext\r\nedit \"080080003\"\r\nnext\r\nedit \"090410001\"\r\nnext\r\nedit \"090410002\"\r\nnext\r\nedit \"040000141\"\r\nnext\r\nedit \"040000136\"\r\nnext\r\nedit \"060180001\"\r\nnext\r\nedit \"060180002\"\r\nnext\r\nedit \"060180003\"\r\nnext\r\nedit \"060180004\"\r\nnext\r\nedit \"060180005\"\r\nnext\r\nedit \"060180006\"\r\nnext\r\nedit \"060180007\"\r\nnext\r\nedit \"060180008\"\r\nnext\r\nedit \"010000072\"\r\nnext\r\nedit \"010000092\"\r\nnext\r\nedit \"010000093\"\r\nnext\r\nedit \"010000214\"\r\nnext\r\nedit \"030000182\"\r\nnext\r\nedit \"030000195\"\r\nnext\r\nedit \"030000204\"\r\nnext\r\nedit \"050140001\"\r\nnext\r\nedit \"050140003\"\r\nnext\r\nedit \"050140004\"\r\nnext\r\nedit \"050220001\"\r\nnext\r\nedit \"080200004\"\r\nnext\r\nedit \"080200005\"\r\nnext\r\nedit \"080210001\"\r\nnext\r\nedit \"080210002\"\r\nnext\r\nedit \"080210003\"\r\nnext\r\nedit \"080210004\"\r\nnext\r\nedit \"080210005\"\r\nnext\r\nedit \"090240001\"\r\nnext\r\nedit \"050180003\"\r\nnext\r\nedit \"080110001\"\r\nnext\r\nedit \"080140012\"\r\nnext\r\nedit \"080050001\"\r\nnext\r\nedit \"080150006\"\r\nnext\r\nedit \"080150003\"\r\nnext\r\nedit \"080150002\"\r\nnext\r\nedit \"080150008\"\r\nnext\r\nedit \"080150014\"\r\nnext\r\nedit \"080150004\"\r\nnext\r\nedit \"080150005\"\r\nnext\r\nedit \"080150032\"\r\nnext\r\nedit \"080150029\"\r\nnext\r\nedit \"080150009\"\r\nnext\r\nedit \"080120002\"\r\nnext\r\nedit \"080150020\"\r\nnext\r\nedit \"080150031\"\r\nnext\r\nedit \"080140015\"\r\nnext\r\nedit \"080120001\"\r\nnext\r\nedit \"050070002\"\r\nnext\r\nedit \"050160002\"\r\nnext\r\nedit \"010000108\"\r\nnext\r\nedit \"080110003\"\r\nnext\r\nend\r\nconfig  alert_only_list\r\nend\r\nconfig  fpm_disable_list\r\nend\r\nconfig  scoring_override_disable_list\r\nend\r\nconfig  score_grade_list\r\nend\r\nconfig  filter_list\r\nend\r\nnext\r\nend\r\nconfig waf x-forwarded-for\r\nedit \"DVWA_X_FORWARDED_FOR\"\r\nset x-forwarded-for-support enable\r\nset original-ip-header X-FORWARDED-FOR\r\nconfig  ip-list\r\nend\r\nnext\r\nend\r\nconfig server-policy vserver\r\nedit \"DVWA_VS\"\r\nconfig  vip-list\r\nedit 1\r\nset interface port1\r\nset use-interface-ip enable\r\nnext\r\nedit 2\r\nset vip DVWA_VIP\r\nnext\r\nend\r\nnext\r\nend\r\nconfig waf http-protocol-parameter-restriction\r\nedit \"DVWA_PROTOCOL_CONSTRAINTS\"\r\nset max-http-header-length 4096\r\nset max-http-header-length-severity High\r\nset max-http-content-length 65536\r\nset max-http-content-length-severity High\r\nset max-http-body-length 65536\r\nset max-http-body-length-severity High\r\nset max-http-request-length 65536\r\nset max-http-request-length-severity High\r\nset max-url-parameter-length 2048\r\nset max-url-parameter-length-severity High\r\nset Illegal-http-version-check enable\r\nset Illegal-http-version-check-severity High\r\nset max-cookie-in-request 16\r\nset max-cookie-in-request-severity High\r\nset max-header-line-request-severity High\r\nset Illegal-http-request-method-check enable\r\nset Illegal-http-request-method-severity High\r\nset max-url-parameter 16\r\nset max-url-parameter-severity High\r\nset Illegal-host-name-check enable\r\nset Illegal-host-name-check-action alert\r\nset Illegal-host-name-check-severity High\r\nset number-of-ranges-in-range-header-action alert_deny\r\nset number-of-ranges-in-range-header-severity High\r\nset http2-max-requests-check enable\r\nset http2-max-requests-severity High\r\nset block-malformed-request-check enable\r\nset block-malformed-request-action alert\r\nset block-malformed-request-severity High\r\nset Illegal-content-length-check enable\r\nset Illegal-content-length-check-severity High\r\nset Illegal-content-type-check enable\r\nset Illegal-content-type-check-severity High\r\nset Illegal-response-code-check enable\r\nset Illegal-response-code-check-severity High\r\nset Post-request-ctype-check enable\r\nset Post-request-ctype-check-severity High\r\nset max-http-header-name-length 255\r\nset max-http-header-name-length-severity High\r\nset max-http-header-value-length 2048\r\nset max-http-header-value-length-severity High\r\nset parameter-name-check enable\r\nset parameter-name-check-severity High\r\nset parameter-value-check enable\r\nset parameter-value-check-severity High\r\nset Illegal-header-name-check enable\r\nset Illegal-header-name-check-action alert\r\nset Illegal-header-name-check-severity High\r\nset Illegal-header-value-check enable\r\nset Illegal-header-value-check-action alert\r\nset Illegal-header-value-check-severity High\r\nset max-http-body-parameter-length 6144\r\nset max-http-body-parameter-length-severity High\r\nset max-http-request-filename-length-severity High\r\nset web-socket-protocol-check enable\r\nset web-socket-protocol-severity High\r\nset max-setting-header-table-size-severity High\r\nset max-setting-current-streams-num-severity High\r\nset max-setting-initial-window-size-severity High\r\nset max-setting-frame-size-severity High\r\nset max-setting-header-list-size-severity High\r\nset max-url-param-name-len 2048\r\nset max-url-param-name-len-severity High\r\nset max-url-param-value-len 2048\r\nset max-url-param-value-len-severity High\r\nset url-param-name-check-severity High\r\nset url-param-value-check-severity High\r\nset null-byte-in-url-severity High\r\nset illegal-byte-in-url-severity High\r\nset malformed-url-severity High\r\nset redundant-header-action alert\r\nset redundant-header-severity High\r\nset chunk-size-severity High\r\nset Internal-resource-limits-check enable\r\nset Internal-resource-limits-severity High\r\nset rpc-protocol-check enable\r\nset rpc-protocol-severity High\r\nset odd-and-even-space-attack-severity High\r\nnext\r\nend\r\nconfig waf bot-deception\r\nedit \"DVWA_BOT_DECEPTION\"\r\nset deception-url /fake_url.php\r\nset action alert_deny\r\nconfig  url-list\r\nedit 1\r\nset url /login.php\r\nnext\r\nend\r\nnext\r\nend\r\nconfig waf biometrics-based-detection\r\nedit \"DVWA_BOT_BIOMETRICS\"\r\nset event-collection-time 10\r\nconfig  url-list\r\nend\r\nnext\r\nend\r\nconfig waf threshold-based-detection policy\r\nedit \"DVWA_BOT_TRESHOLDS\"\r\nnext\r\nend\r\nconfig waf known-bots\r\nedit \"DVWA_BOT_SIGNATURES\"\r\nconfig  malicious-bot-disable-list\r\nend\r\nconfig  known-good-bots-disable-list\r\nend\r\nnext\r\nend\r\nconfig waf bot-mitigate-policy\r\nedit \"DVWA_BOT_POLICY\"\r\nset bot-deception DVWA_BOT_DECEPTION\r\nset biometrics-based-detection DVWA_BOT_BIOMETRICS\r\nset threshold-based-detection DVWA_BOT_TRESHOLDS\r\nset known-bots DVWA_BOT_SIGNATURES\r\nnext\r\nend\r\nconfig waf http-request-flood-prevention-rule\r\nedit \"DVWA_HTTP_FLOOD\"\r\nset access-limit-in-http-session 5\r\nnext\r\nend\r\nconfig waf http-connection-flood-check-rule\r\nedit \"DVWA_CONNECTION_LIMIT\"\r\nset http-connection-threshold 100\r\nnext\r\nend\r\nconfig waf layer4-access-limit-rule\r\nedit \"DVWA_HTTP_LIMIT\"\r\nset access-limit-standalone-ip 500\r\nset access-limit-share-ip 1000\r\nnext\r\nend\r\nconfig waf layer4-connection-flood-check-rule\r\nedit \"DVWA_TCP_FLOOD\"\r\nset layer4-connection-threshold 255\r\nnext\r\nend\r\nconfig waf application-layer-dos-prevention\r\nedit \"DVWA_DOS_POLICY\"\r\nset enable-http-session-based-prevention enable\r\nset http-request-flood-prevention-rule DVWA_HTTP_FLOOD\r\nset http-connection-flood-check-rule DVWA_CONNECTION_LIMIT\r\nset enable-layer4-dos-prevention enable\r\nset layer4-access-limit-rule DVWA_HTTP_LIMIT\r\nset layer4-connection-flood-check-rule DVWA_TCP_FLOOD\r\nset layer3-fragment-protection enable\r\nnext\r\nend\r\nconfig waf custom-access rule\r\nedit \"DVWA_VULNERABILITY_SCANNING\"\r\nset action block-period\r\nset severity High\r\nconfig  main-class\r\nedit \"010000000\"\r\nset no-subclass enable\r\nnext\r\nedit \"030000000\"\r\nset no-subclass enable\r\nnext\r\nedit \"050000000\"\r\nnext\r\nedit \"090000000\"\r\nnext\r\nedit \"070000000\"\r\nset no-subclass enable\r\nnext\r\nend\r\nconfig  sub-class\r\nedit \"050010000\"\r\nnext\r\nedit \"050020000\"\r\nnext\r\nedit \"050030000\"\r\nnext\r\nedit \"050050000\"\r\nnext\r\nedit \"050060000\"\r\nnext\r\nedit \"050070000\"\r\nnext\r\nedit \"050080000\"\r\nnext\r\nedit \"050090000\"\r\nnext\r\nedit \"050100000\"\r\nnext\r\nedit \"050110000\"\r\nnext\r\nedit \"050130000\"\r\nnext\r\nedit \"050140000\"\r\nnext\r\nedit \"050150000\"\r\nnext\r\nedit \"050160000\"\r\nnext\r\nedit \"050170000\"\r\nnext\r\nedit \"050180000\"\r\nnext\r\nedit \"050190000\"\r\nnext\r\nedit \"050200000\"\r\nnext\r\nedit \"050220000\"\r\nnext\r\nedit \"050230000\"\r\nnext\r\nedit \"090230000\"\r\nnext\r\nedit \"090240000\"\r\nnext\r\nedit \"090300000\"\r\nnext\r\nedit \"090310000\"\r\nnext\r\nedit \"090320000\"\r\nnext\r\nedit \"090330000\"\r\nnext\r\nedit \"090340000\"\r\nnext\r\nedit \"090410000\"\r\nnext\r\nedit \"090440000\"\r\nnext\r\nedit \"090480000\"\r\nnext\r\nedit \"090490000\"\r\nnext\r\nedit \"090500000\"\r\nnext\r\nedit \"090510000\"\r\nnext\r\nend\r\nconfig  custom-signature\r\nedit 1\r\nnext\r\nend\r\nconfig  occurrence\r\nedit 2\r\nset occurrence-num 10\r\nset within 60\r\nnext\r\nend\r\nnext\r\nedit \"DVWA_BRUTE_FORCE_LOGIN\"\r\nset action block-period\r\nset severity High\r\nset bot-confirmation enable\r\nset bot-recognition captcha-enforcement\r\nset validation-timeout 5\r\nconfig  url-filter\r\nedit 1\r\nset request-file \"^/.*\\\\.(php|asp|aspx|jsp)\"\r\nnext\r\nend\r\nconfig  occurrence\r\nedit 2\r\nset occurrence-num 20\r\nset within 10\r\nnext\r\nend\r\nnext\r\nend\r\nconfig waf custom-access policy\r\nedit \"DVWA_CUSTOM_POLICY\"\r\nconfig  rule\r\nedit 1\r\nset rule-name DVWA_VULNERABILITY_SCANNING\r\nnext\r\nedit 2\r\nset rule-name DVWA_BRUTE_FORCE_LOGIN\r\nnext\r\nend\r\nset threat-weight severe\r\nnext\r\nend\r\nconfig waf http-header-security\r\nedit \"DVWA_HEADER_SECURITY\"\r\nconfig  http-header-security-list\r\nedit 1\r\nset name x-content-type-options\r\nnext\r\nedit 2\r\nset value sameorigin\r\nnext\r\nedit 3\r\nset name x-xss-protection\r\nset value sanitizing-mode\r\nnext\r\nend\r\nnext\r\nend\r\nconfig waf cookie-security\r\nedit \"DVWA_COOKIE_SECURITY\"\r\nset security-mode signed\r\nset action alert_deny\r\nset severity Medium\r\nset secure-cookie enable\r\nnext\r\nend\r\nconfig waf web-protection-profile inline-protection\r\nedit \"DVWA_PROTECTION_PROFILE\"\r\nset url-access-policy DVWA_URL_ACCESS_POLICY\r\nset signature-rule DVWA_SIGNATURE_PROFILE\r\nset x-forwarded-for-rule DVWA_X_FORWARDED_FOR\r\nset parameter-validation-rule DVWA_PARAMETER_VALIDATION\r\nset hidden-fields-protection DVWA_HIDDEN_FIELD\r\nset allow-method-policy DVWA_ALLOW_METHOD\r\nset url-rewrite-policy DVWA_URL_REWRITE\r\nset http-authen-policy DVWA_AUTH_POLICY\r\nset file-upload-policy DVWA_FILE_SECURITY_POLICY\r\nset webshell-detection-policy DVWA_WEBSHELL_UPLOADING\r\nset http-protocol-parameter-restriction DVWA_PROTOCOL_CONSTRAINTS\r\nset ip-list-policy DVWA_IP_LIST\r\nset application-layer-dos-prevention DVWA_DOS_POLICY\r\nset geo-block-list-policy DVWA_GEO_PROTECTION\r\nset custom-access-policy DVWA_CUSTOM_POLICY\r\nset ip-intelligence enable\r\nset cookie-security-policy DVWA_COOKIE_SECURITY\r\nset fortigate-quarantined-ips enable\r\nset csrf-protection DVWA_CSRF_PROTECTION\r\nset user-tracking-policy DVWA_USER_TRACKING\r\nset http-header-security DVWA_HEADER_SECURITY\r\nset bot-mitigate-policy DVWA_BOT_POLICY\r\nnext\r\nend\r\nconfig server-policy policy\r\nedit \"DVWA_POLICY\"\r\nset ssl enable\r\nset vserver DVWA_VS\r\nset service HTTP\r\nset https-service HTTPS\r\nset web-protection-profile DVWA_PROTECTION_PROFILE\r\nset replacemsg Predefined\r\nset server-pool DVWA_POOL\r\nset http-to-https enable\r\nset syncookie enable\r\nset tlog enable\r\nnext\r\nend\r\nconfig wvs policy\r\nedit \"DVWASCANPOLICY\"\r\nset report_format html xml pdf \r\nset profile DVWASCANPROFILE\r\nnext\r\nend",
                        "fwbBCustomDataBodyHA": "[format('config system ha\n set override enable\n set mode active-active-high-volume\n set group-id {0}\n set group-name {1}\n set priority 2\n set tunnel-local {2}\n set tunnel-peer {3}\n set monitor port1 port2\nend\n', parameters('fortiWebHaGroupId'), toLower(parameters('deploymentPrefix')), variables('sn2IPfwbB'), variables('sn2IPfwbA'))]",
                        "configFortiGateIntegrationB": "[format('\nconfig system fortigate-integration\nset address {0}\nset port 443\nset protocol HTTPS\nset username {1}\nset password {2}\nset flag enable\nend\n', parameters('subnet4StartAddress'), parameters('adminUsername'), parameters('adminPassword'))]",
                        "var_fwbAVmName": "[format('{0}-FWB-A', parameters('deploymentPrefix'))]",
                        "var_fwbBVmName": "[format('{0}-FWB-B', parameters('deploymentPrefix'))]",
                        "var_fwbANic1Name": "[format('{0}-Nic1', variables('var_fwbAVmName'))]",
                        "fwbANic1Id": "[resourceId('Microsoft.Network/networkInterfaces', variables('var_fwbANic1Name'))]",
                        "var_fwbANic2Name": "[format('{0}-Nic2', variables('var_fwbAVmName'))]",
                        "fwbANic2Id": "[resourceId('Microsoft.Network/networkInterfaces', variables('var_fwbANic2Name'))]",
                        "var_fwbBNic1Name": "[format('{0}-Nic1', variables('var_fwbBVmName'))]",
                        "fwbBNic1Id": "[resourceId('Microsoft.Network/networkInterfaces', variables('var_fwbBNic1Name'))]",
                        "var_fwbBNic2Name": "[format('{0}-Nic2', variables('var_fwbBVmName'))]",
                        "fwbBNic2Id": "[resourceId('Microsoft.Network/networkInterfaces', variables('var_fwbBNic2Name'))]",
                        "var_serialConsoleStorageAccountName": "[format('fwbsc{0}', uniqueString(resourceGroup().id))]",
                        "serialConsoleStorageAccountType": "Standard_LRS",
                        "serialConsoleEnabled": "[if(equals(parameters('fwbserialConsole'), 'yes'), true(), false())]",
                        "var_publicIPName": "[if(equals(parameters('publicIPName'), ''), format('{0}-FWB-PIP', parameters('deploymentPrefix')), parameters('publicIPName'))]",
                        "publicIPId": "[if(equals(parameters('publicIPNewOrExistingOrNone'), 'new'), resourceId('Microsoft.Network/publicIPAddresses', variables('var_publicIPName')), resourceId(parameters('publicIPResourceGroup'), 'Microsoft.Network/publicIPAddresses', variables('var_publicIPName')))]",
                        "publicIPAddressId": {
                            "id": "[variables('publicIPId')]"
                        },
                        "ilbProperties": {
                            "properties": {
                                "privateIPAddress": "[variables('sn1IPlb')]",
                                "privateIPAllocationMethod": "Static",
                                "subnet": "[variables('subnet5Id')]"
                            }
                        },
                        "elbProperties": {
                            "properties": {
                                "publicIPAddress": "[variables('publicIPAddressId')]"
                            }
                        },
                        "var_NSGName": "[format('{0}-{1}-NSG', parameters('deploymentPrefix'), uniqueString(resourceGroup().id))]",
                        "NSGId": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('var_NSGName'))]",
                        "sn1IPArray": "[split(parameters('subnet5Prefix'), '.')]",
                        "sn1IPArray2": "[string(int(variables('sn1IPArray')[2]))]",
                        "sn1IPArray1": "[string(int(variables('sn1IPArray')[1]))]",
                        "sn1IPArray0": "[string(int(variables('sn1IPArray')[0]))]",
                        "sn1IPStartAddress": "[split(parameters('subnet5StartAddress'), '.')]",
                        "sn1IPfwbA": "[format('{0}.{1}.{2}.{3}', variables('sn1IPArray0'), variables('sn1IPArray1'), variables('sn1IPArray2'), int(variables('sn1IPStartAddress')[3]))]",
                        "sn1IPfwbB": "[format('{0}.{1}.{2}.{3}', variables('sn1IPArray0'), variables('sn1IPArray1'), variables('sn1IPArray2'), add(int(variables('sn1IPStartAddress')[3]), 1))]",
                        "sn1IPlb": "[format('{0}.{1}.{2}.{3}', variables('sn1IPArray0'), variables('sn1IPArray1'), variables('sn1IPArray2'), sub(int(variables('sn1IPStartAddress')[3]), 1))]",
                        "sn2IPArray": "[split(parameters('subnet6Prefix'), '.')]",
                        "sn2IPArray2": "[string(int(variables('sn2IPArray')[2]))]",
                        "sn2IPArray1": "[string(int(variables('sn2IPArray')[1]))]",
                        "sn2IPArray0": "[string(int(variables('sn2IPArray')[0]))]",
                        "sn2IPStartAddress": "[split(parameters('subnet6StartAddress'), '.')]",
                        "sn2GatewayIP": "[format('{0}.{1}.{2}.{3}', variables('sn2IPArray0'), variables('sn2IPArray1'), variables('sn2IPArray2'), variables('sn2IPArray3'))]",
                        "sn2IPArray3": "[string(add(int(variables('sn2IPArray2nd')[0]), 1))]",
                        "sn2IPArray2nd": "[split(variables('sn2IPArray2ndString'), '/')]",
                        "sn2IPArray2ndString": "[string(variables('sn2IPArray')[3])]",
                        "sn2IPfwbA": "[format('{0}.{1}.{2}.{3}', variables('sn2IPArray0'), variables('sn2IPArray1'), variables('sn2IPArray2'), add(int(variables('sn2IPStartAddress')[3]), 1))]",
                        "sn2IPfwbB": "[format('{0}.{1}.{2}.{3}', variables('sn2IPArray0'), variables('sn2IPArray1'), variables('sn2IPArray2'), add(int(variables('sn2IPStartAddress')[3]), 2))]",
                        "externalLBName_NatRule_FWBAdminPerm_fwbA": "[format('{0}FWBAdminPerm', variables('var_fwbAVmName'))]",
                        "externalLBId_NatRule_FWBAdminPerm_fwbA": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', variables('var_externalLBName'), variables('externalLBName_NatRule_FWBAdminPerm_fwbA'))]",
                        "externalLBName_NatRule_SSH_fwbA": "[format('{0}SSH', variables('var_fwbAVmName'))]",
                        "externalLBId_NatRule_SSH_fwbA": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', variables('var_externalLBName'), variables('externalLBName_NatRule_SSH_fwbA'))]",
                        "externalLBName_NatRule_FWBAdminPerm_fwbB": "[format('{0}FWBAdminPerm', variables('var_fwbBVmName'))]",
                        "externalLBId_NatRule_FWBAdminPerm_fwbB": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', variables('var_externalLBName'), variables('externalLBName_NatRule_FWBAdminPerm_fwbB'))]",
                        "externalLBName_NatRule_SSH_fwbB": "[format('{0}SSH', variables('var_fwbBVmName'))]",
                        "externalLBId_NatRule_SSH_fwbB": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', variables('var_externalLBName'), variables('externalLBName_NatRule_SSH_fwbB'))]",
                        "var_externalLBName": "[format('{0}-FWB-ELB', parameters('deploymentPrefix'))]",
                        "externalLBFEName": "[format('{0}-LB-{1}-FrontEnd', parameters('deploymentPrefix'), parameters('subnet5Name'))]",
                        "externalLBFEId": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations/', variables('var_externalLBName'), variables('externalLBFEName'))]",
                        "externalLBBEName": "[format('{0}-LB-{1}-BackEnd', parameters('deploymentPrefix'), parameters('subnet5Name'))]",
                        "externalLBBEId": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools/', variables('var_externalLBName'), variables('externalLBBEName'))]",
                        "externalLBProbeName": "heatlhProbeHttp",
                        "externalLBProbeId": "[resourceId('Microsoft.Network/loadBalancers/probes/', variables('var_externalLBName'), variables('externalLBProbeName'))]",
                        "externalLBProbe2Name": "heatlhProbeHttps",
                        "externalLBProbe2Id": "[resourceId('Microsoft.Network/loadBalancers/probes/', variables('var_externalLBName'), variables('externalLBProbe2Name'))]",
                        "useAZ": "[and(not(empty(pickZones('Microsoft.Compute', 'virtualMachines', parameters('location')))), equals(parameters('availabilityOptions'), 'Availability Zones'))]",
                        "var_internalLBName": "[format('{0}-FWB-ILB', parameters('deploymentPrefix'))]",
                        "internalLBFEName": "[format('{0}-ILB-{1}-FrontEnd', parameters('deploymentPrefix'), parameters('subnet5Name'))]",
                        "internalLBFEId": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('var_internalLBName'), variables('internalLBFEName'))]",
                        "internalLBBEName": "[format('{0}-ILB-{1}-BackEnd', parameters('deploymentPrefix'), parameters('subnet5Name'))]",
                        "internalLBBEId": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('var_internalLBName'), variables('internalLBBEName'))]",
                        "internalLBProbeName": "lbprobe",
                        "internalLBProbeId": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('var_internalLBName'), variables('internalLBProbeName'))]",
                        "zone1": [
                            "1"
                        ],
                        "zone2": [
                            "2"
                        ]
                    },
                    "resources": [
                        {
                            "condition": "[equals(parameters('fwbserialConsole'), 'yes')]",
                            "type": "Microsoft.Storage/storageAccounts",
                            "apiVersion": "2021-02-01",
                            "name": "[variables('var_serialConsoleStorageAccountName')]",
                            "location": "[parameters('location')]",
                            "kind": "Storage",
                            "sku": {
                                "name": "[variables('serialConsoleStorageAccountType')]"
                            }
                        },
                        {
                            "condition": "[not(variables('useAZ'))]",
                            "type": "Microsoft.Compute/availabilitySets",
                            "apiVersion": "2021-07-01",
                            "name": "[variables('var_availabilitySetName')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "location": "[parameters('location')]",
                            "properties": {
                                "platformFaultDomainCount": 2,
                                "platformUpdateDomainCount": 2
                            },
                            "sku": {
                                "name": "Aligned"
                            }
                        },
                        {
                            "type": "Microsoft.Network/networkSecurityGroups",
                            "apiVersion": "2022-05-01",
                            "name": "[variables('var_NSGName')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "location": "[parameters('location')]",
                            "properties": {
                                "securityRules": [
                                    {
                                        "name": "AllowSSHInbound",
                                        "properties": {
                                            "description": "Allow SSH In",
                                            "protocol": "Tcp",
                                            "sourcePortRange": "*",
                                            "destinationPortRange": "22",
                                            "sourceAddressPrefix": "*",
                                            "destinationAddressPrefix": "*",
                                            "access": "Allow",
                                            "priority": 100,
                                            "direction": "Inbound"
                                        }
                                    },
                                    {
                                        "name": "AllowHTTPInbound",
                                        "properties": {
                                            "description": "Allow 80 In",
                                            "protocol": "Tcp",
                                            "sourcePortRange": "*",
                                            "destinationPortRange": "80",
                                            "sourceAddressPrefix": "*",
                                            "destinationAddressPrefix": "*",
                                            "access": "Allow",
                                            "priority": 110,
                                            "direction": "Inbound"
                                        }
                                    },
                                    {
                                        "name": "AllowHTTPSInbound",
                                        "properties": {
                                            "description": "Allow 443 In",
                                            "protocol": "Tcp",
                                            "sourcePortRange": "*",
                                            "destinationPortRange": "443",
                                            "sourceAddressPrefix": "*",
                                            "destinationAddressPrefix": "*",
                                            "access": "Allow",
                                            "priority": 120,
                                            "direction": "Inbound"
                                        }
                                    },
                                    {
                                        "name": "AllowDevRegInbound",
                                        "properties": {
                                            "description": "Allow 514 in for device registration",
                                            "protocol": "Tcp",
                                            "sourcePortRange": "*",
                                            "destinationPortRange": "514",
                                            "sourceAddressPrefix": "*",
                                            "destinationAddressPrefix": "*",
                                            "access": "Allow",
                                            "priority": 130,
                                            "direction": "Inbound"
                                        }
                                    },
                                    {
                                        "name": "AllowMgmtHTTPInbound",
                                        "properties": {
                                            "description": "Allow 8080 In",
                                            "protocol": "Tcp",
                                            "sourcePortRange": "*",
                                            "destinationPortRange": "8080",
                                            "sourceAddressPrefix": "*",
                                            "destinationAddressPrefix": "*",
                                            "access": "Allow",
                                            "priority": 140,
                                            "direction": "Inbound"
                                        }
                                    },
                                    {
                                        "name": "AllowMgmtHTTPSInbound",
                                        "properties": {
                                            "description": "Allow 8443 In",
                                            "protocol": "Tcp",
                                            "sourcePortRange": "*",
                                            "destinationPortRange": "8443",
                                            "sourceAddressPrefix": "*",
                                            "destinationAddressPrefix": "*",
                                            "access": "Allow",
                                            "priority": 150,
                                            "direction": "Inbound"
                                        }
                                    },
                                    {
                                        "name": "AllowAllOutbound",
                                        "properties": {
                                            "description": "Allow all out",
                                            "protocol": "*",
                                            "sourcePortRange": "*",
                                            "destinationPortRange": "*",
                                            "sourceAddressPrefix": "*",
                                            "destinationAddressPrefix": "*",
                                            "access": "Allow",
                                            "priority": 105,
                                            "direction": "Outbound"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "condition": "[equals(parameters('publicIPNewOrExistingOrNone'), 'new')]",
                            "type": "Microsoft.Network/publicIPAddresses",
                            "apiVersion": "2022-05-01",
                            "name": "[variables('var_publicIPName')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "location": "[parameters('location')]",
                            "sku": {
                                "name": "Standard"
                            },
                            "properties": {
                                "publicIPAllocationMethod": "[parameters('publicIPType')]",
                                "dnsSettings": {
                                    "domainNameLabel": "[toLower(parameters('deploymentPrefix'))]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Network/loadBalancers",
                            "apiVersion": "2022-05-01",
                            "name": "[variables('var_externalLBName')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "location": "[parameters('location')]",
                            "sku": {
                                "name": "Standard"
                            },
                            "properties": {
                                "frontendIPConfigurations": [
                                    {
                                        "name": "[variables('externalLBFEName')]",
                                        "properties": "[if(equals(parameters('publicIPNewOrExistingOrNone'), 'none'), variables('ilbProperties').properties, variables('elbProperties').properties)]"
                                    }
                                ],
                                "backendAddressPools": [
                                    {
                                        "name": "[variables('externalLBBEName')]"
                                    }
                                ],
                                "loadBalancingRules": [
                                    {
                                        "properties": {
                                            "frontendIPConfiguration": {
                                                "id": "[variables('externalLBFEId')]"
                                            },
                                            "backendAddressPool": {
                                                "id": "[variables('externalLBBEId')]"
                                            },
                                            "probe": {
                                                "id": "[variables('externalLBProbeId')]"
                                            },
                                            "protocol": "Tcp",
                                            "frontendPort": 80,
                                            "backendPort": 80,
                                            "enableFloatingIP": true,
                                            "idleTimeoutInMinutes": 5
                                        },
                                        "name": "PublicLBRule-FE1-http"
                                    },
                                    {
                                        "properties": {
                                            "frontendIPConfiguration": {
                                                "id": "[variables('externalLBFEId')]"
                                            },
                                            "backendAddressPool": {
                                                "id": "[variables('externalLBBEId')]"
                                            },
                                            "probe": {
                                                "id": "[variables('externalLBProbe2Id')]"
                                            },
                                            "protocol": "Tcp",
                                            "frontendPort": 443,
                                            "backendPort": 443,
                                            "enableFloatingIP": true,
                                            "idleTimeoutInMinutes": 5
                                        },
                                        "name": "PublicLBRule-FE1-https"
                                    }
                                ],
                                "inboundNatRules": [
                                    {
                                        "name": "[variables('externalLBName_NatRule_SSH_fwbA')]",
                                        "properties": {
                                            "frontendIPConfiguration": {
                                                "id": "[variables('externalLBFEId')]"
                                            },
                                            "protocol": "Tcp",
                                            "frontendPort": 50030,
                                            "backendPort": 22,
                                            "enableFloatingIP": false
                                        }
                                    },
                                    {
                                        "name": "[variables('externalLBName_NatRule_FWBAdminPerm_fwbA')]",
                                        "properties": {
                                            "frontendIPConfiguration": {
                                                "id": "[variables('externalLBFEId')]"
                                            },
                                            "protocol": "Tcp",
                                            "frontendPort": 40030,
                                            "backendPort": 8443,
                                            "enableFloatingIP": false
                                        }
                                    },
                                    {
                                        "name": "[variables('externalLBName_NatRule_SSH_fwbB')]",
                                        "properties": {
                                            "frontendIPConfiguration": {
                                                "id": "[variables('externalLBFEId')]"
                                            },
                                            "protocol": "Tcp",
                                            "frontendPort": 50031,
                                            "backendPort": 22,
                                            "enableFloatingIP": false
                                        }
                                    },
                                    {
                                        "name": "[variables('externalLBName_NatRule_FWBAdminPerm_fwbB')]",
                                        "properties": {
                                            "frontendIPConfiguration": {
                                                "id": "[variables('externalLBFEId')]"
                                            },
                                            "protocol": "Tcp",
                                            "frontendPort": 40031,
                                            "backendPort": 8443,
                                            "enableFloatingIP": false
                                        }
                                    }
                                ],
                                "probes": [
                                    {
                                        "properties": {
                                            "protocol": "Tcp",
                                            "port": 8080,
                                            "intervalInSeconds": 15,
                                            "numberOfProbes": 2
                                        },
                                        "name": "[variables('externalLBProbeName')]"
                                    },
                                    {
                                        "properties": {
                                            "protocol": "Tcp",
                                            "port": 8443,
                                            "intervalInSeconds": 15,
                                            "numberOfProbes": 2
                                        },
                                        "name": "[variables('externalLBProbe2Name')]"
                                    }
                                ]
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/publicIPAddresses', variables('var_publicIPName'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Network/loadBalancers",
                            "apiVersion": "2020-04-01",
                            "name": "[variables('var_internalLBName')]",
                            "location": "[parameters('location')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "sku": {
                                "name": "Standard"
                            },
                            "properties": {
                                "frontendIPConfigurations": [
                                    {
                                        "name": "[variables('internalLBFEName')]",
                                        "properties": {
                                            "privateIPAddress": "[variables('sn1IPlb')]",
                                            "privateIPAllocationMethod": "Static",
                                            "subnet": {
                                                "id": "[variables('subnet5Id')]"
                                            }
                                        }
                                    }
                                ],
                                "backendAddressPools": [
                                    {
                                        "name": "[variables('internalLBBEName')]"
                                    }
                                ],
                                "loadBalancingRules": [
                                    {
                                        "properties": {
                                            "frontendIPConfiguration": {
                                                "id": "[variables('internalLBFEId')]"
                                            },
                                            "backendAddressPool": {
                                                "id": "[variables('internalLBBEId')]"
                                            },
                                            "probe": {
                                                "id": "[variables('internalLBProbeId')]"
                                            },
                                            "protocol": "All",
                                            "frontendPort": 0,
                                            "backendPort": 0,
                                            "enableFloatingIP": true,
                                            "idleTimeoutInMinutes": 5
                                        },
                                        "name": "lbruleFEall"
                                    }
                                ],
                                "probes": [
                                    {
                                        "properties": {
                                            "protocol": "Tcp",
                                            "port": 80,
                                            "intervalInSeconds": 5,
                                            "numberOfProbes": 2
                                        },
                                        "name": "lbprobe"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.Network/networkInterfaces",
                            "apiVersion": "2022-05-01",
                            "name": "[variables('var_fwbANic1Name')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "location": "[parameters('location')]",
                            "properties": {
                                "ipConfigurations": [
                                    {
                                        "name": "ipconfig1",
                                        "properties": {
                                            "privateIPAddress": "[variables('sn1IPfwbA')]",
                                            "privateIPAllocationMethod": "Static",
                                            "subnet": {
                                                "id": "[variables('subnet5Id')]"
                                            },
                                            "loadBalancerBackendAddressPools": [
                                                {
                                                    "id": "[variables('externalLBBEId')]"
                                                },
                                                {
                                                    "id": "[variables('internalLBBEId')]"
                                                }
                                            ],
                                            "loadBalancerInboundNatRules": [
                                                {
                                                    "id": "[variables('externalLBId_NatRule_SSH_fwbA')]"
                                                },
                                                {
                                                    "id": "[variables('externalLBId_NatRule_FWBAdminPerm_fwbA')]"
                                                }
                                            ]
                                        }
                                    }
                                ],
                                "enableIPForwarding": true,
                                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                                "networkSecurityGroup": {
                                    "id": "[variables('NSGId')]"
                                }
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/loadBalancers', variables('var_externalLBName'))]",
                                "[resourceId('Microsoft.Network/loadBalancers', variables('var_internalLBName'))]",
                                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('var_NSGName'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Network/networkInterfaces",
                            "apiVersion": "2022-05-01",
                            "name": "[variables('var_fwbBNic1Name')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "location": "[parameters('location')]",
                            "properties": {
                                "ipConfigurations": [
                                    {
                                        "name": "ipconfig1",
                                        "properties": {
                                            "privateIPAddress": "[variables('sn1IPfwbB')]",
                                            "privateIPAllocationMethod": "Static",
                                            "subnet": {
                                                "id": "[variables('subnet5Id')]"
                                            },
                                            "loadBalancerBackendAddressPools": [
                                                {
                                                    "id": "[variables('externalLBBEId')]"
                                                },
                                                {
                                                    "id": "[variables('internalLBBEId')]"
                                                }
                                            ],
                                            "loadBalancerInboundNatRules": [
                                                {
                                                    "id": "[variables('externalLBId_NatRule_SSH_fwbB')]"
                                                },
                                                {
                                                    "id": "[variables('externalLBId_NatRule_FWBAdminPerm_fwbB')]"
                                                }
                                            ]
                                        }
                                    }
                                ],
                                "enableIPForwarding": true,
                                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                                "networkSecurityGroup": {
                                    "id": "[variables('NSGId')]"
                                }
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/loadBalancers', variables('var_externalLBName'))]",
                                "[resourceId('Microsoft.Network/loadBalancers', variables('var_internalLBName'))]",
                                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('var_NSGName'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Network/networkInterfaces",
                            "apiVersion": "2022-05-01",
                            "name": "[variables('var_fwbANic2Name')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "location": "[parameters('location')]",
                            "properties": {
                                "ipConfigurations": [
                                    {
                                        "name": "ipconfig1",
                                        "properties": {
                                            "privateIPAllocationMethod": "Static",
                                            "privateIPAddress": "[variables('sn2IPfwbA')]",
                                            "subnet": {
                                                "id": "[variables('subnet6Id')]"
                                            }
                                        }
                                    }
                                ],
                                "enableIPForwarding": false,
                                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]"
                            }
                        },
                        {
                            "type": "Microsoft.Network/networkInterfaces",
                            "apiVersion": "2022-05-01",
                            "name": "[variables('var_fwbBNic2Name')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "location": "[parameters('location')]",
                            "properties": {
                                "ipConfigurations": [
                                    {
                                        "name": "ipconfig1",
                                        "properties": {
                                            "privateIPAllocationMethod": "Static",
                                            "privateIPAddress": "[variables('sn2IPfwbB')]",
                                            "subnet": {
                                                "id": "[variables('subnet6Id')]"
                                            }
                                        }
                                    }
                                ],
                                "enableIPForwarding": false,
                                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]"
                            }
                        },
                        {
                            "type": "Microsoft.Compute/virtualMachines",
                            "apiVersion": "2022-08-01",
                            "name": "[variables('var_fwbAVmName')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "location": "[parameters('location')]",
                            "identity": {
                                "type": "SystemAssigned"
                            },
                            "zones": "[if(variables('useAZ'), variables('zone1'), null())]",
                            "plan": {
                                "name": "[parameters('fortiWebImageSKU')]",
                                "publisher": "[variables('imagePublisher')]",
                                "product": "[variables('imageOffer')]"
                            },
                            "properties": {
                                "hardwareProfile": {
                                    "vmSize": "[parameters('instanceType')]"
                                },
                                "availabilitySet": "[if(not(variables('useAZ')), variables('availabilitySetId'), null())]",
                                "osProfile": {
                                    "computerName": "[variables('var_fwbAVmName')]",
                                    "adminUsername": "[parameters('adminUsername')]",
                                    "adminPassword": "[parameters('adminPassword')]",
                                    "customData": "[base64(string(createObject('cloud-initd', 'enable', 'usr-cli', format('{0}{1}{2}{3}\n', variables('fwbGlobalDataBody'), variables('fwbACustomDataBodyHA'), format('{0}{1}{2}{3}{4}{5}{6}', format('\nconfig system vip\n edit \"DVWA_VIP\"\n set vip {0}/32\n set interface port1\n next\n end\n', reference(variables('publicIPId')).ipAddress), variables('fwbStaticRoute'), variables('fwbServerPool'), variables('configFortiGateIntegrationA'), variables('letsEncrypt'), variables('wvsProfile'), variables('bulkPoCConfig')), parameters('fortiWebAAdditionalCustomData')))))]"
                                },
                                "storageProfile": {
                                    "imageReference": {
                                        "publisher": "[variables('imagePublisher')]",
                                        "offer": "[variables('imageOffer')]",
                                        "sku": "[parameters('fortiWebImageSKU')]",
                                        "version": "[parameters('fortiWebImageVersion')]"
                                    },
                                    "osDisk": {
                                        "createOption": "FromImage"
                                    },
                                    "dataDisks": [
                                        {
                                            "diskSizeGB": 30,
                                            "lun": 0,
                                            "createOption": "Empty"
                                        }
                                    ]
                                },
                                "networkProfile": {
                                    "networkInterfaces": [
                                        {
                                            "properties": {
                                                "primary": true
                                            },
                                            "id": "[variables('fwbANic1Id')]"
                                        },
                                        {
                                            "properties": {
                                                "primary": false
                                            },
                                            "id": "[variables('fwbANic2Id')]"
                                        }
                                    ]
                                },
                                "diagnosticsProfile": {
                                    "bootDiagnostics": {
                                        "enabled": "[variables('serialConsoleEnabled')]",
                                        "storageUri": "[if(equals(parameters('fwbserialConsole'), 'yes'), reference(variables('var_serialConsoleStorageAccountName'), '2021-08-01').primaryEndpoints.blob, null())]"
                                    }
                                }
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Compute/availabilitySets', variables('var_availabilitySetName'))]",
                                "[resourceId('Microsoft.Network/networkInterfaces', variables('var_fwbANic1Name'))]",
                                "[resourceId('Microsoft.Network/networkInterfaces', variables('var_fwbANic2Name'))]",
                                "[resourceId('Microsoft.Network/publicIPAddresses', variables('var_publicIPName'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Compute/virtualMachines",
                            "apiVersion": "2022-08-01",
                            "name": "[variables('var_fwbBVmName')]",
                            "tags": {
                                "provider": "[toUpper(parameters('fortinetTags').provider)]"
                            },
                            "location": "[parameters('location')]",
                            "identity": {
                                "type": "SystemAssigned"
                            },
                            "zones": "[if(variables('useAZ'), variables('zone2'), null())]",
                            "plan": {
                                "name": "[parameters('fortiWebImageSKU')]",
                                "publisher": "[variables('imagePublisher')]",
                                "product": "[variables('imageOffer')]"
                            },
                            "properties": {
                                "hardwareProfile": {
                                    "vmSize": "[parameters('instanceType')]"
                                },
                                "availabilitySet": "[if(not(variables('useAZ')), variables('availabilitySetId'), null())]",
                                "osProfile": {
                                    "computerName": "[variables('var_fwbBVmName')]",
                                    "adminUsername": "[parameters('adminUsername')]",
                                    "adminPassword": "[parameters('adminPassword')]",
                                    "customData": "[base64(string(createObject('cloud-initd', 'enable', 'usr-cli', format('{0}{1}{2}{3}', variables('fwbGlobalDataBody'), variables('fwbBCustomDataBodyHA'), format('{0}{1}{2}{3}{4}{5}\n', format('\nconfig system vip\n edit \"DVWA_VIP\"\n set vip {0}/32\n set interface port1\n next\n end\n', reference(variables('publicIPId')).ipAddress), variables('fwbStaticRoute'), variables('fwbServerPool'), variables('configFortiGateIntegrationB'), variables('letsEncrypt'), variables('bulkPoCConfig')), parameters('fortiWebBAdditionalCustomData')))))]"
                                },
                                "storageProfile": {
                                    "imageReference": {
                                        "publisher": "[variables('imagePublisher')]",
                                        "offer": "[variables('imageOffer')]",
                                        "sku": "[parameters('fortiWebImageSKU')]",
                                        "version": "[parameters('fortiWebImageVersion')]"
                                    },
                                    "osDisk": {
                                        "createOption": "FromImage"
                                    },
                                    "dataDisks": [
                                        {
                                            "diskSizeGB": 30,
                                            "lun": 0,
                                            "createOption": "Empty"
                                        }
                                    ]
                                },
                                "networkProfile": {
                                    "networkInterfaces": [
                                        {
                                            "properties": {
                                                "primary": true
                                            },
                                            "id": "[variables('fwbBNic1Id')]"
                                        },
                                        {
                                            "properties": {
                                                "primary": false
                                            },
                                            "id": "[variables('fwbBNic2Id')]"
                                        }
                                    ]
                                },
                                "diagnosticsProfile": {
                                    "bootDiagnostics": {
                                        "enabled": "[variables('serialConsoleEnabled')]",
                                        "storageUri": "[if(equals(parameters('fwbserialConsole'), 'yes'), reference(variables('var_serialConsoleStorageAccountName'), '2021-08-01').primaryEndpoints.blob, null())]"
                                    }
                                }
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Compute/availabilitySets', variables('var_availabilitySetName'))]",
                                "[resourceId('Microsoft.Network/networkInterfaces', variables('var_fwbBNic1Name'))]",
                                "[resourceId('Microsoft.Network/networkInterfaces', variables('var_fwbBNic2Name'))]",
                                "[resourceId('Microsoft.Network/publicIPAddresses', variables('var_publicIPName'))]"
                            ]
                        }
                    ],
                    "outputs": {
                        "fortiWebPublicIP": {
                            "type": "string",
                            "value": "[if(equals(parameters('publicIPNewOrExistingOrNone'), 'new'), reference(variables('publicIPId')).dnsSettings.fqdn, '')]"
                        },
                        "fwbACustomData": {
                            "type": "string",
                            "value": "[base64(string(createObject('cloud-initd', 'enable', 'usr-cli', format('{0}{1}{2}{3}\n', variables('fwbGlobalDataBody'), variables('fwbACustomDataBodyHA'), format('{0}{1}{2}{3}{4}{5}{6}', format('\nconfig system vip\n edit \"DVWA_VIP\"\n set vip {0}/32\n set interface port1\n next\n end\n', reference(variables('publicIPId')).ipAddress), variables('fwbStaticRoute'), variables('fwbServerPool'), variables('configFortiGateIntegrationA'), variables('letsEncrypt'), variables('wvsProfile'), variables('bulkPoCConfig')), parameters('fortiWebAAdditionalCustomData')))))]"
                        },
                        "fwbBCustomData": {
                            "type": "string",
                            "value": "[base64(string(createObject('cloud-initd', 'enable', 'usr-cli', format('{0}{1}{2}{3}', variables('fwbGlobalDataBody'), variables('fwbBCustomDataBodyHA'), format('{0}{1}{2}{3}{4}{5}\n', format('\nconfig system vip\n edit \"DVWA_VIP\"\n set vip {0}/32\n set interface port1\n next\n end\n', reference(variables('publicIPId')).ipAddress), variables('fwbStaticRoute'), variables('fwbServerPool'), variables('configFortiGateIntegrationB'), variables('letsEncrypt'), variables('bulkPoCConfig')), parameters('fortiWebBAdditionalCustomData')))))]"
                        },
                        "fwbACustomDataPreconfig": {
                            "type": "string",
                            "value": "[format('{0}{1}{2}{3}{4}{5}{6}', format('\nconfig system vip\n edit \"DVWA_VIP\"\n set vip {0}/32\n set interface port1\n next\n end\n', reference(variables('publicIPId')).ipAddress), variables('fwbStaticRoute'), variables('fwbServerPool'), variables('configFortiGateIntegrationA'), variables('letsEncrypt'), variables('wvsProfile'), variables('bulkPoCConfig'))]"
                        }
                    }
                }
            },
            "condition": "[equals(parameters('deployFortiWeb'), 'yes')]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "dvwaDeployment",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'networkDeployment')]"
            ],
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "deploymentPrefix": {
                        "value": "[parameters('deploymentPrefix')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "subnet7Name": {
                        "value": "[parameters('subnet7Name')]"
                    },
                    "subnet7Prefix": {
                        "value": "[parameters('subnet7Prefix')]"
                    },
                    "subnet7StartAddress": {
                        "value": "[parameters('subnet7StartAddress')]"
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "vnetNewOrExisting": {
                        "value": "[parameters('vnetNewOrExisting')]"
                    },
                    "vnetResourceGroup": {
                        "value": "[parameters('vnetResourceGroup')]"
                    },
                    "dvwaserialConsole": {
                        "value": "[parameters('dvwaserialConsole')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "metadata": {
                        "_generator": {
                            "name": "bicep",
                            "version": "0.15.31.15270",
                            "templateHash": "15664015440069934293"
                        }
                    },
                    "parameters": {
                        "deploymentPrefix": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        },
                        "adminUsername": {
                            "type": "string"
                        },
                        "adminPassword": {
                            "type": "securestring"
                        },
                        "vnetNewOrExisting": {
                            "type": "string"
                        },
                        "vnetName": {
                            "type": "string"
                        },
                        "subnet7Name": {
                            "type": "string"
                        },
                        "vnetResourceGroup": {
                            "type": "string"
                        },
                        "subnet7Prefix": {
                            "type": "string"
                        },
                        "subnet7StartAddress": {
                            "type": "string"
                        },
                        "dvwaserialConsole": {
                            "type": "string"
                        }
                    },
                    "variables": {
                        "vmName": "[format('{0}-DVWA', parameters('deploymentPrefix'))]",
                        "vmNicName": "[format('{0}-DVWA-NIC', parameters('deploymentPrefix'))]",
                        "vmNicId": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNicName'))]",
                        "var_vnetName": "[if(equals(parameters('vnetName'), ''), format('{0}-VNET', parameters('deploymentPrefix')), parameters('vnetName'))]",
                        "var_serialConsoleStorageAccountName": "[format('dvwa{0}', uniqueString(resourceGroup().id))]",
                        "serialConsoleStorageAccountType": "Standard_LRS",
                        "serialConsoleEnabled": "[if(equals(parameters('dvwaserialConsole'), 'yes'), true(), false())]",
                        "subnet7Id": "[if(equals(parameters('vnetNewOrExisting'), 'new'), resourceId('Microsoft.Network/virtualNetworks/subnets', variables('var_vnetName'), parameters('subnet7Name')), resourceId(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', variables('var_vnetName'), parameters('subnet7Name')))]",
                        "sn7IPArray": "[split(parameters('subnet7Prefix'), '.')]",
                        "sn7IPArray2": "[string(int(variables('sn7IPArray')[2]))]",
                        "sn7IPArray1": "[string(int(variables('sn7IPArray')[1]))]",
                        "sn7IPArray0": "[string(int(variables('sn7IPArray')[0]))]",
                        "sn7IPStartAddress": "[split(parameters('subnet7StartAddress'), '.')]",
                        "sn7IPUbuntu": "[format('{0}.{1}.{2}.{3}', variables('sn7IPArray0'), variables('sn7IPArray1'), variables('sn7IPArray2'), int(variables('sn7IPStartAddress')[3]))]",
                        "vmCustomDataBody": "#!/bin/bash\r\nexec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1\r\n#Wait for the repo \r\necho \"Waiting for repo to be reacheable\"\r\ncurl --retry 20 -s -o /dev/null \"https://download.docker.com/linux/centos/docker-ce.repo\"\r\necho \"Adding repo\"\r\nuntil dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\r\ndo\r\n   dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo \r\n   sleep 2\r\ndone\r\ndnf remove podman buildah\r\necho \"Installing docker support\"\r\nuntil dnf -y install docker-ce docker-ce-cli containerd.io\r\ndo\r\n    dnf -y install docker-ce docker-ce-cli containerd.io\r\n    sleep 2\r\ndone\r\nsystemctl start docker.service\r\nsystemctl enable docker.service\r\n#Wait for Internet access through the FGT by testing the docker regsitry\r\necho \"Waiting for docker registry to be reacheable\"\r\ncurl --retry 20 -s -o /dev/null \"https://index.docker.io/v2/\"\r\necho \"installing dvwa docker container\"\r\nuntil docker run --restart=always --name dvwa -d -p 80:80 vulnerables/web-dvwa\r\ndo\r\n    docker pull vulnerables/web-dvwa\r\n    sleep 2\r\ndone\r\n",
                        "vmCustomData": "[base64(variables('vmCustomDataBody'))]"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Network/networkInterfaces",
                            "apiVersion": "2020-11-01",
                            "name": "[variables('vmNicName')]",
                            "location": "[parameters('location')]",
                            "properties": {
                                "ipConfigurations": [
                                    {
                                        "name": "ipconfig1",
                                        "properties": {
                                            "privateIPAddress": "[variables('sn7IPUbuntu')]",
                                            "privateIPAllocationMethod": "Static",
                                            "subnet": {
                                                "id": "[variables('subnet7Id')]"
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.Compute/virtualMachines",
                            "apiVersion": "2020-12-01",
                            "name": "[variables('vmName')]",
                            "location": "[parameters('location')]",
                            "plan": {
                                "name": "8-gen2",
                                "publisher": "almalinux",
                                "product": "almalinux"
                            },
                            "properties": {
                                "hardwareProfile": {
                                    "vmSize": "Standard_F2s_v2"
                                },
                                "osProfile": {
                                    "computerName": "DVWA",
                                    "adminUsername": "[parameters('adminUsername')]",
                                    "adminPassword": "[parameters('adminPassword')]",
                                    "customData": "[variables('vmCustomData')]"
                                },
                                "storageProfile": {
                                    "imageReference": {
                                        "publisher": "almalinux",
                                        "offer": "almalinux",
                                        "sku": "8-gen2",
                                        "version": "latest"
                                    },
                                    "osDisk": {
                                        "name": "name",
                                        "caching": "ReadWrite",
                                        "createOption": "FromImage"
                                    }
                                },
                                "networkProfile": {
                                    "networkInterfaces": [
                                        {
                                            "id": "[variables('vmNicId')]"
                                        }
                                    ]
                                },
                                "diagnosticsProfile": {
                                    "bootDiagnostics": {
                                        "enabled": "[variables('serialConsoleEnabled')]",
                                        "storageUri": "[if(equals(parameters('dvwaserialConsole'), 'yes'), reference(variables('var_serialConsoleStorageAccountName'), '2021-08-01').primaryEndpoints.blob, null())]"
                                    }
                                }
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNicName'))]"
                            ]
                        },
                        {
                            "condition": "[equals(parameters('dvwaserialConsole'), 'yes')]",
                            "type": "Microsoft.Storage/storageAccounts",
                            "apiVersion": "2021-02-01",
                            "name": "[variables('var_serialConsoleStorageAccountName')]",
                            "location": "[parameters('location')]",
                            "kind": "Storage",
                            "sku": {
                                "name": "[variables('serialConsoleStorageAccountType')]"
                            }
                        }
                    ],
                    "outputs": {
                        "dvwaPrivateIP": {
                            "type": "string",
                            "value": "[variables('sn7IPUbuntu')]"
                        }
                    }
                }
            },
            "condition": "[equals(parameters('deployDVWA'), 'yes')]"
        }
    ],
    "outputs": {
        "dvwaSSH": {
            "type": "String",
            "value": "[format('{0}:22', reference(resourceId('Microsoft.Resources/deployments', 'fortigateDeployment'), '2020-10-01').outputs.fortiGatePublicIP.value)]"
        },
        "dvwaHTTP": {
            "type": "String",
            "value": "[format('http://{0}:80', reference(resourceId('Microsoft.Resources/deployments', 'fortiwebDeployment'), '2020-10-01').outputs.fortiWebPublicIP.value)]"
        },
        "fortiGateAManagementConsole": {
            "type": "String",
            "value": "[format('https://{0}:443', reference(resourceId('Microsoft.Resources/deployments', 'fortigateDeployment'), '2020-10-01').outputs.fortiGateAManagementPublicIP.value)]"
        },
        "fortiGateBManagementConsole": {
            "type": "String",
            "value": "[format('https://{0}:443', reference(resourceId('Microsoft.Resources/deployments', 'fortigateDeployment'), '2020-10-01').outputs.fortiGateBManagementPublicIP.value)]"
        },
        "fortiWebAManagementConsole": {
            "type": "String",
            "value": "[format('https://{0}:40030', reference(resourceId('Microsoft.Resources/deployments', 'fortiwebDeployment'), '2020-10-01').outputs.fortiWebPublicIP.value)]"
        },
        "fortiWebBManagementConsole": {
            "type": "String",
            "value": "[format('https://{0}:40031', reference(resourceId('Microsoft.Resources/deployments', 'fortiwebDeployment'), '2020-10-01').outputs.fortiWebPublicIP.value)]"
        }
    }
}